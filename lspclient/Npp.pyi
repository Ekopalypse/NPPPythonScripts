from typing import Optional
from enum import EnumMeta, IntEnum

class EnhancedIntEnum(EnumMeta):
    @property
    def names(cls):
        return dict(cls.__members__)

    @property
    def values(cls):
        return {v.value: v for k, v in cls.__members__.items()}


class console:
    def clear() -> None : ...
    @property
    def encoding() -> str : ...
    def hide() -> None : ...
    def run(arg1: str, arg2: Optional[object], arg3: Optional[object]) -> int : ...
    def show() -> None : ...
    def write(arg) -> None : ...
    def writeError(arg2) -> None : ...


class editor:
    @property
    def WHOLEDOC() -> int : ...
    @property
    def hwnd() -> int : ...
    def addRefDocument(doc: long) -> None : ...
    def addSelection( caret: int, anchor: int) -> int : ...
    def addStyledText(c: Cell) -> int : ...
    def addTabStop( line: int, x: int) -> None : ...
    def addText(text: object) -> int : ...
    def addUndoAction( token: int, flags: int) -> None : ...
    def allocate(bytes: int) -> None : ...
    def allocateExtendedStyles(numberStyles: int) -> int : ...
    def allocateLineCharacterIndex(lineCharacterIndex: int) -> None :
    def allocateSubStyles( styleBase: int, numberStyles: int) -> int : ...
    def annotationClearAll() -> None : ...
    def annotationGetLines(line: int) -> int : ...
    def annotationGetStyle(line: int) -> int : ...
    def annotationGetStyleOffset() -> int : ...
    def annotationGetStyles(line: int) -> str : ...
    def annotationGetText(line: int) -> str : ...
    def annotationGetVisible() -> int : ...
    def annotationSetStyle( line: int, style: int) -> None : ...
    def annotationSetStyleOffset(style: int) -> None : ...
    def annotationSetStyles( line: int, styles: object) -> None : ...
    def annotationSetText( line: int, text: object) -> None : ...
    def annotationSetVisible(visible: int) -> None : ...
    def appendText(text: object) -> int : ...
    def assignCmdKey( km: int, msg: int) -> None : ...
    def autoCActive() -> bool : ...
    def autoCCancel() -> None : ...
    def autoCComplete() -> None : ...
    def autoCGetAutoHide() -> bool : ...
    def autoCGetCancelAtStart() -> bool : ...
    def autoCGetCaseInsensitiveBehaviour() -> int : ...
    def autoCGetChooseSingle() -> bool : ...
    def autoCGetCurrent() -> int : ...
    def autoCGetCurrentText() -> str : ...
    def autoCGetDropRestOfWord() -> bool : ...
    def autoCGetIgnoreCase() -> bool : ...
    def autoCGetMaxHeight() -> int : ...
    def autoCGetMaxWidth() -> int : ...
    def autoCGetMulti() -> int : ...
    def autoCGetOrder() -> int : ...
    def autoCGetSeparator() -> int : ...
    def autoCGetTypeSeparator() -> int : ...
    def autoCPosStart() -> int : ...
    def autoCSelect(text: object) -> None : ...
    def autoCSetAutoHide(autoHide: bool) -> None : ...
    def autoCSetCancelAtStart(cancel: bool) -> None : ...
    def autoCSetCaseInsensitiveBehaviour(behaviour: int) -> None : ...
    def autoCSetChooseSingle(chooseSingle: bool) -> None : ...
    def autoCSetDropRestOfWord(dropRestOfWord: bool) -> None : ...
    def autoCSetFillUps(characterSet: object) -> None : ...
    def autoCSetIgnoreCase(ignoreCase: bool) -> None : ...
    def autoCSetMaxHeight(rowCount: int) -> None : ...
    def autoCSetMaxWidth(characterCount: int) -> None : ...
    def autoCSetMulti(multi: int) -> None : ...
    def autoCSetOrder(order: int) -> None : ...
    def autoCSetSeparator(separatorCharacter: int) -> None : ...
    def autoCSetTypeSeparator(separatorCharacter: int) -> None : ...
    def autoCShow( lenEntered: int, itemList: object) -> None : ...
    def autoCStops(characterSet: object) -> None : ...
    def backTab() -> None : ...
    def beginUndoAction() -> None : ...
    def braceBadLight(pos: int) -> None : ...
    def braceBadLightIndicator( useBraceBadLightIndicator: bool, indicator: int) -> None : ...
    def braceHighlight( pos1: int, pos2: int) -> None : ...
    def braceHighlightIndicator( useBraceHighlightIndicator: bool, indicator: int) -> None : ...
    def braceMatch(pos: int) -> int : ...
    def callTipActive() -> bool : ...
    def callTipCancel() -> None : ...
    def callTipPosStart() -> int : ...
    def callTipSetBack(back: tuple) -> None : ...
    def callTipSetFore(fore: tuple) -> None : ...
    def callTipSetForeHlt(fore: tuple) -> None : ...
    def callTipSetHlt( start: int, end: int) -> None : ...
    def callTipSetPosStart(posStart: int) -> None : ...
    def callTipSetPosition(above: bool) -> None : ...
    def callTipShow( pos: int, definition: object) -> None : ...
    def callTipUseStyle(tabSize: int) -> None : ...
    def callback( arg2: object, arg3: list) -> bool : ...
    def callbackSync( arg2: object, arg3: list) -> bool : ...
    def canPaste() -> bool : ...
    def canRedo() -> bool : ...
    def canUndo() -> bool : ...
    def cancel() -> None : ...
    def changeInsertion(text: object) -> int : ...
    def changeLexerState( start: int, end: int) -> int : ...
    def charLeft() -> None : ...
    def charLeftExtend() -> None : ...
    def charLeftRectExtend() -> None : ...
    def charPositionFromPoint( x: int, y: int) -> int : ...
    def charPositionFromPointClose( x: int, y: int) -> int : ...
    def charRight() -> None : ...
    def charRightExtend() -> None : ...
    def charRightRectExtend() -> None : ...
    def chooseCaretX() -> None : ...
    def clear() -> None : ...
    def clearAll() -> None : ...
    def clearAllCmdKeys() -> None : ...
    def clearCallbacks() -> None : ...
    def clearCmdKey(km: int) -> None : ...
    def clearDocumentStyle() -> None : ...
    def clearRegisteredImages() -> None : ...
    def clearRepresentation(encodedCharacter: object) -> None : ...
    def clearSelections() -> None : ...
    def clearTabStops(line: int) -> None : ...
    def colourise( start: int, end: int) -> None : ...
    def contractedFoldNext(lineStart: int) -> int : ...
    def convertEOLs(eolMode: int) -> None : ...
    def copy() -> None : ...
    def copyAllowLine() -> None : ...
    def copyRange( start: int, end: int) -> None : ...
    def copyText(text: object) -> int : ...
    def countCharacters( startPos: int, endPos: int) -> int : ...
    def countCodeUnits(start: int, end: int) -> int :
    def createDocument() -> int : ...
    def createLoader(bytes: int) -> int : ...
    def cut() -> None : ...
    def delLineLeft() -> None : ...
    def delLineRight() -> None : ...
    def delWordLeft() -> None : ...
    def delWordRight() -> None : ...
    def delWordRightEnd() -> None : ...
    def deleteBack() -> None : ...
    def deleteBackNotLine() -> None : ...
    def deleteLine(arg2: int) -> None : ...
    def deleteRange( pos: int, deleteLength: int) -> None : ...
    def describeKeyWordSets() -> str : ...
    def describeProperty(name: object) -> str : ...
    def descriptionOfStyle(style: int) -> str :
    def distanceToSecondaryStyles() -> int : ...
    def docLineFromVisible(lineDisplay: int) -> int : ...
    def documentEnd() -> None : ...
    def documentEndExtend() -> None : ...
    def documentStart() -> None : ...
    def documentStartExtend() -> None : ...
    def dropSelectionN(selection: int) -> None : ...
    def editToggleOvertype() -> None : ...
    def emptyUndoBuffer() -> None : ...
    def encodedFromUTF8(utf8: object) -> str : ...
    def endUndoAction() -> None : ...
    def ensureVisible(line: int) -> None : ...
    def ensureVisibleEnforcePolicy(line: int) -> None : ...
    def expandChildren( line: int, level: int) -> None : ...
    def findColumn( line: int, column: int) -> int : ...
    def findIndicatorFlash( start: int, end: int) -> None : ...
    def findIndicatorHide() -> None : ...
    def findIndicatorShow( start: int, end: int) -> None : ...
    def findText( flags: int, start: int, end: int, ft: object) -> object : ...
    def flash() -> None : ...
    def foldAll(action: int) -> None : ...
    def foldChildren( line: int, action: int) -> None : ...
    def foldDisplayTextGetStyle() -> int : ...
    def foldDisplayTextSetStyle(style: int) -> None : ...
    def foldLine( line: int, action: int) -> None : ...
    def forEachLine(arg2: object) -> None : ...
    def formFeed() -> None : ...
    def freeSubStyles() -> None : ...
    def getAccessibility() -> int : ...
    def getAdditionalCaretFore() -> tuple : ...
    def getAdditionalCaretsBlink() -> bool : ...
    def getAdditionalCaretsVisible() -> bool : ...
    def getAdditionalSelAlpha() -> int : ...
    def getAdditionalSelectionTyping() -> bool : ...
    def getAllLinesVisible() -> bool : ...
    def getAnchor() -> int : ...
    def getAutomaticFold() -> int : ...
    def getBackSpaceUnIndents() -> bool : ...
    def getBidirectional() -> int : ...
    def getBufferedDraw() -> bool : ...
    def getCaretFore() -> tuple : ...
    def getCaretLineBack() -> tuple : ...
    def getCaretLineBackAlpha() -> int : ...
    def getCaretLineFrame() -> int : ...
    def getCaretLineVisible() -> bool : ...
    def getCaretLineVisibleAlways() -> bool : ...
    def getCaretPeriod() -> int : ...
    def getCaretSticky() -> int : ...
    def getCaretStyle() -> int : ...
    def getCaretWidth() -> int : ...
    def getCharAt(pos: int) -> int : ...
    def getCharacterCategoryOptimization() -> int : ...
    def getCharacterPointer() -> str : ...
    def getCodePage() -> int : ...
    def getColumn(pos: int) -> int : ...
    def getCommandEvents() -> bool : ...
    def getControlCharSymbol() -> int : ...
    def getCurLine() -> str : ...
    def getCurrentPos() -> int : ...
    def getCurrentWord() -> str : ...
    def getCursor() -> int : ...
    def getDefaultFoldDisplayText() -> str : ...
    def getDirectFunction() -> int : ...
    def getDirectPointer() -> int : ...
    def getDocPointer() -> int : ...
    def getDocumentOptions() -> int : ...
    def getEOLMode() -> int : ...
    def getEdgeColour() -> tuple : ...
    def getEdgeColumn() -> int : ...
    def getEdgeMode() -> int : ...
    def getEndAtLastLine() -> bool : ...
    def getEndStyled() -> int : ...
    def getExtraAscent() -> int : ...
    def getExtraDescent() -> int : ...
    def getFirstVisibleLine() -> int : ...
    def getFocus() -> bool : ...
    def getFoldExpanded(line: int) -> bool : ...
    def getFoldLevel(line: int) -> int : ...
    def getFoldParent(line: int) -> int : ...
    def getFontQuality() -> int : ...
    def getGapPosition() -> int : ...
    def getHScrollBar() -> bool : ...
    def getHighlightGuide() -> int : ...
    def getHotspotActiveBack() -> tuple : ...
    def getHotspotActiveFore() -> tuple : ...
    def getHotspotActiveUnderline() -> bool : ...
    def getHotspotSingleLine() -> bool : ...
    def getIMEInteraction() -> int : ...
    def getIdentifier() -> int : ...
    def getIdleStyling() -> int : ...
    def getIndent() -> int : ...
    def getIndentationGuides() -> int : ...
    def getIndicatorCurrent() -> int : ...
    def getIndicatorValue() -> int : ...
    def getLastChild( line: int, level: int) -> int : ...
    def getLayoutCache() -> int : ...
    def getLength() -> int : ...
    def getLexer() -> int : ...
    def getLexerLanguage() -> str : ...
    def getLine(line: int) -> str : ...
    def getLineCharacterIndex() -> int : ...
    def getLineCount() -> int : ...
    def getLineEndPosition(line: int) -> int : ...
    def getLineEndTypesActive() -> int : ...
    def getLineEndTypesAllowed() -> int : ...
    def getLineEndTypesSupported() -> int : ...
    def getLineIndentPosition(line: int) -> int : ...
    def getLineIndentation(line: int) -> int : ...
    def getLineSelEndPosition(line: int) -> int : ...
    def getLineSelStartPosition(line: int) -> int : ...
    def getLineState(line: int) -> int : ...
    def getLineVisible(line: int) -> bool : ...
    def getMainSelection() -> int : ...
    def getMarginBackN(margin: int) -> tuple : ...
    def getMarginCursorN(margin: int) -> int : ...
    def getMarginLeft() -> int : ...
    def getMarginMaskN(margin: int) -> int : ...
    def getMarginOptions() -> int : ...
    def getMarginRight() -> int : ...
    def getMarginSensitiveN(margin: int) -> bool : ...
    def getMarginTypeN(margin: int) -> int : ...
    def getMarginWidthN(margin: int) -> int : ...
    def getMaxLineState() -> int : ...
    def getModEventMask() -> int : ...
    def getModify() -> bool : ...
    def getMouseDownCaptures() -> bool : ...
    def getMouseDwellTime() -> int : ...
    def getMouseSelectionRectangularSwitch() -> bool : ...
    def getMultiPaste() -> int : ...
    def getMultipleSelection() -> bool : ...
    def getNextTabStop( line: int, x: int) -> int : ...
    def getOvertype() -> bool : ...
    def getPasteConvertEndings() -> bool : ...
    def getPhasesDraw() -> int : ...
    def getPositionCache() -> int : ...
    def getPrimaryStyleFromStyle(style: int) -> int : ...
    def getPrintColourMode() -> int : ...
    def getPrintMagnification() -> int : ...
    def getPrintWrapMode() -> int : ...
    def getProperty(key: object) -> str : ...
    def getPropertyExpanded(key: object) -> str : ...
    def getPropertyInt(key: object) -> int : ...
    def getPunctuationChars() -> str : ...
    def getRangePointer( position: int, rangeLength: int) -> str : ...
    def getReadOnly() -> bool : ...
    def getRectangularSelectionAnchor() -> int : ...
    def getRectangularSelectionAnchorVirtualSpace() -> int : ...
    def getRectangularSelectionCaret() -> int : ...
    def getRectangularSelectionCaretVirtualSpace() -> int : ...
    def getRectangularSelectionModifier() -> int : ...
    def getRepresentation(encodedCharacter: object) -> str : ...
    def getScrollWidth() -> int : ...
    def getScrollWidthTracking() -> bool : ...
    def getSearchFlags() -> int : ...
    def getSelAlpha() -> int : ...
    def getSelEOLFilled() -> bool : ...
    def getSelText() -> str : ...
    def getSelectionEmpty() -> bool : ...
    def getSelectionEnd() -> int : ...
    def getSelectionMode() -> int : ...
    def getSelectionNAnchor(selection: int) -> int : ...
    def getSelectionNAnchorVirtualSpace(selection: int) -> int : ...
    def getSelectionNCaret(selection: int) -> int : ...
    def getSelectionNCaretVirtualSpace(selection: int) -> int : ...
    def getSelectionNEnd(selection: int) -> int : ...
    def getSelectionNStart(selection: int) -> int : ...
    def getSelectionStart() -> int : ...
    def getSelections() -> int : ...
    def getStatus() -> int : ...
    def getStyleAt(pos: int) -> int : ...
    def getStyleBits() -> int : ...
    def getStyleBitsNeeded() -> int : ...
    def getStyleFromSubStyle(subStyle: int) -> int : ...
    def getStyledText( start: int, end: int) -> tuple : ...
    def getSubStyleBases() -> str : ...
    def getSubStylesLength(styleBase: int) -> int : ...
    def getSubStylesStart(styleBase: int) -> int : ...
    def getTabIndents() -> bool : ...
    def getTabWidth() -> int : ...
    def getTag(tagNumber: int) -> str : ...
    def getTargetEnd() -> int : ...
    def getTargetStart() -> int : ...
    def getTargetText() -> str : ...
    def getTechnology() -> int : ...
    def getText() -> str : ...
    def getTextLength() -> int : ...
    def getTextRange( start: int, end: int) -> str : ...
    def getTwoPhaseDraw() -> bool : ...
    def getUndoCollection() -> bool : ...
    def getUseTabs() -> bool : ...
    def getUserCharSelection() -> tuple : ...
    def getUserLineSelection() -> tuple : ...
    def getVScrollBar() -> bool : ...
    def getViewEOL() -> bool : ...
    def getViewWS() -> int : ...
    def getVirtualSpaceOptions() -> int : ...
    def getWhitespaceChars() -> str : ...
    def getWhitespaceSize() -> int : ...
    def getWord( [, arg2: object [, arg3: object]]) -> str : ...
    def getWordChars() -> str : ...
    def getWrapIndentMode() -> int : ...
    def getWrapMode() -> int : ...
    def getWrapStartIndent() -> int : ...
    def getWrapVisualFlags() -> int : ...
    def getWrapVisualFlagsLocation() -> int : ...
    def getXOffset() -> int : ...
    def getZoom() -> int : ...
    def gotoLine(line: int) -> None : ...
    def gotoPos(pos: int) -> None : ...
    def grabFocus() -> None : ...
    def hideLines( lineStart: int, lineEnd: int) -> None : ...
    def hideSelection(normal: bool) -> None : ...
    def home() -> None : ...
    def homeDisplay() -> None : ...
    def homeDisplayExtend() -> None : ...
    def homeExtend() -> None : ...
    def homeRectExtend() -> None : ...
    def homeWrap() -> None : ...
    def homeWrapExtend() -> None : ...
    def indicGetAlpha(indicator: int) -> int : ...
    def indicGetFlags(indic: int) -> int : ...
    def indicGetFore(indic: int) -> tuple : ...
    def indicGetHoverFore(indic: int) -> tuple : ...
    def indicGetHoverStyle(indic: int) -> int : ...
    def indicGetOutlineAlpha(indicator: int) -> int : ...
    def indicGetStyle(indic: int) -> int : ...
    def indicGetUnder(indic: int) -> bool : ...
    def indicSetAlpha( indicator: int, alpha: int) -> None : ...
    def indicSetFlags( indic: int, flags: int) -> None : ...
    def indicSetFore( indic: int, fore: tuple) -> None : ...
    def indicSetHoverFore( indic: int, fore: tuple) -> None : ...
    def indicSetHoverStyle( indic: int, style: int) -> None : ...
    def indicSetOutlineAlpha( indicator: int, alpha: int) -> None : ...
    def indicSetStyle( indic: int, style: int) -> None : ...
    def indicSetUnder( indic: int, under: bool) -> None : ...
    def indicatorAllOnFor(position: int) -> int : ...
    def indicatorClearRange( position: int, clearLength: int) -> None : ...
    def indicatorEnd( indicator: int, position: int) -> int : ...
    def indicatorFillRange( position: int, fillLength: int) -> None : ...
    def indicatorStart( indicator: int, position: int) -> int : ...
    def indicatorValueAt( indicator: int, position: int) -> int : ...
    def insertText( pos: int, text: object) -> None : ...
    def lineCopy() -> None : ...
    def lineCut() -> None : ...
    def lineDelete() -> None : ...
    def lineDown() -> None : ...
    def lineDownExtend() -> None : ...
    def lineDownRectExtend() -> None : ...
    def lineDuplicate() -> None : ...
    def lineEnd() -> None : ...
    def lineEndDisplay() -> None : ...
    def lineEndDisplayExtend() -> None : ...
    def lineEndExtend() -> None : ...
    def lineEndRectExtend() -> None : ...
    def lineEndWrap() -> None : ...
    def lineEndWrapExtend() -> None : ...
    def lineFromPosition(pos: int) -> int : ...
    def lineLength(line: int) -> int : ...
    def lineScroll( columns: int, lines: int) -> None : ...
    def lineScrollDown() -> None : ...
    def lineScrollUp() -> None : ...
    def lineTranspose() -> None : ...
    def lineUp() -> None : ...
    def lineUpExtend() -> None : ...
    def lineUpRectExtend() -> None : ...
    def linesJoin() -> None : ...
    def linesOnScreen() -> int : ...
    def linesSplit(pixelWidth: int) -> None : ...
    def loadLexerLibrary(path: object) -> None : ...
    def lowerCase() -> None : ...
    def marginGetStyle(line: int) -> int : ...
    def marginGetStyleOffset() -> int : ...
    def marginGetStyles(line: int) -> str : ...
    def marginGetText(line: int) -> str : ...
    def marginSetStyle( line: int, style: int) -> None : ...
    def marginSetStyleOffset(style: int) -> None : ...
    def marginSetStyles( line: int, styles: object) -> None : ...
    def marginSetText( line: int, text: object) -> None : ...
    def marginTextClearAll() -> None : ...
    def markerAdd( line: int, markerNumber: int) -> int : ...
    def markerAddSet( line: int, set: int) -> None : ...
    def markerDefine( markerNumber: int, markerSymbol: int) -> None : ...
    def markerDefinePixmap( markerNumber: int, pixmap: object) -> None : ...
    def markerDefineRGBAImage( markerNumber: int, pixels: object) -> None : ...
    def markerDelete( line: int, markerNumber: int) -> None : ...
    def markerDeleteAll(markerNumber: int) -> None : ...
    def markerDeleteHandle(handle: int) -> None : ...
    def markerEnableHighlight(enabled: bool) -> None : ...
    def markerGet(line: int) -> int : ...
    def markerLineFromHandle(handle: int) -> int : ...
    def markerNext( lineStart: int, markerMask: int) -> int : ...
    def markerPrevious( lineStart: int, markerMask: int) -> int : ...
    def markerSetAlpha( markerNumber: int, alpha: int) -> None : ...
    def markerSetBack( markerNumber: int, back: tuple) -> None : ...
    def markerSetBackSelected( markerNumber: int, back: tuple) -> None : ...
    def markerSetFore( markerNumber: int, fore: tuple) -> None : ...
    def markerSymbolDefined(markerNumber: int) -> int : ...
    def moveCaretInsideView() -> None : ...
    def moveSelectedLinesDown() -> None : ...
    def moveSelectedLinesUp() -> None : ...
    def newLine() -> None : ...
    def null() -> None : ...
    def pageDown() -> None : ...
    def pageDownExtend() -> None : ...
    def pageDownRectExtend() -> None : ...
    def pageUp() -> None : ...
    def pageUpExtend() -> None : ...
    def pageUpRectExtend() -> None : ...
    def paraDown() -> None : ...
    def paraDownExtend() -> None : ...
    def paraUp() -> None : ...
    def paraUpExtend() -> None : ...
    def paste() -> None : ...
    def pointXFromPosition(pos: int) -> int : ...
    def pointYFromPosition(pos: int) -> int : ...
    def positionAfter(pos: int) -> int : ...
    def positionBefore(pos: int) -> int : ...
    def positionFromLine(line: int) -> int : ...
    def positionFromPoint( x: int, y: int) -> int : ...
    def positionFromPointClose( x: int, y: int) -> int : ...
    def positionRelative( pos: int, relative: int) -> int : ...
    def privateLexerCall( operation: long, pointer: long) -> int : ...
    def propertyNames() -> str : ...
    def propertyType(name: object) -> int : ...
    def rGBAImageSetHeight(height: int) -> None : ...
    def rGBAImageSetScale(scalePercent: int) -> None : ...
    def rGBAImageSetWidth(width: int) -> None : ...
    def redo() -> None : ...
    def registerImage( type: int, xpmData: object) -> None : ...
    def registerRGBAImage( type: int, pixels: object) -> None : ...
    def releaseAllExtendedStyles() -> None : ...
    def releaseDocument(doc: long) -> None : ...
    def replace( search: object, replace: object) -> None : ...
    def replaceLine( arg2: int, arg3: object) -> None : ...
    def replaceSel(text: object) -> None : ...
    def replaceTarget(text: object) -> int : ...
    def replaceTargetRE(text: object) -> int : ...
    def replaceWholeLine( arg2: int, arg3: object) -> None : ...
    def rereplace( searchRegex: object, replace: object, flags: Optional[int], startPosition: Optional[int], endPosition: Optional[int], maxCount: Optional[int]) -> None : ...
    def research( search: object, handlerFunction: object, flags: Optional[int], startPosition: Optional[int], endPosition: Optional[int], maxCount: Optional[int]) -> None : ...
    def rotateSelection() -> None : ...
    def scrollCaret() -> None : ...
    def scrollRange( secondary: int, primary: int) -> None : ...
    def scrollToEnd() -> None : ...
    def scrollToStart() -> None : ...
    def search( search: object, handlerFunction: object) -> None : ...
    def searchAnchor() -> None : ...
    def searchInTarget(text: object) -> int : ...
    def searchNext( flags: int, text: object) -> int : ...
    def searchPrev( flags: int, text: object) -> int : ...
    def selectAll() -> None : ...
    def selectionDuplicate() -> None : ...
    def selectionIsRectangle() -> bool : ...
    def setAdditionalCaretFore(fore: tuple) -> None : ...
    def setAdditionalCaretsBlink(additionalCaretsBlink: bool) -> None : ...
    def setAdditionalCaretsVisible(additionalCaretsBlink: bool) -> None : ...
    def setAdditionalSelAlpha(alpha: int) -> None : ...
    def setAdditionalSelBack(back: tuple) -> None : ...
    def setAdditionalSelFore(fore: tuple) -> None : ...
    def setAdditionalSelectionTyping(additionalSelectionTyping: bool) -> None : ...
    def setAnchor(posAnchor: int) -> None : ...
    def setAutomaticFold(automaticFold: int) -> None : ...
    def setBackSpaceUnIndents(bsUnIndents: bool) -> None : ...
    def setBufferedDraw(buffered: bool) -> None : ...
    def setCaretFore(fore: tuple) -> None : ...
    def setCaretLineBack(back: tuple) -> None : ...
    def setCaretLineBackAlpha(alpha: int) -> None : ...
    def setCaretLineVisible(show: bool) -> None : ...
    def setCaretLineVisibleAlways(alwaysVisible: bool) -> None : ...
    def setCaretPeriod(periodMilliseconds: int) -> None : ...
    def setCaretSticky(useCaretStickyBehaviour: int) -> None : ...
    def setCaretStyle(caretStyle: int) -> None : ...
    def setCaretWidth(pixelWidth: int) -> None : ...
    def setCharsDefault() -> None : ...
    def setCodePage(codePage: int) -> None : ...
    def setControlCharSymbol(symbol: int) -> None : ...
    def setCurrentPos(pos: int) -> None : ...
    def setCursor(cursorType: int) -> None : ...
    def setDocPointer(pointer: long) -> None : ...
    def setEOLMode(eolMode: int) -> None : ...
    def setEdgeColour(edgeColour: tuple) -> None : ...
    def setEdgeColumn(column: int) -> None : ...
    def setEdgeMode(mode: int) -> None : ...
    def setEmptySelection(pos: int) -> None : ...
    def setEndAtLastLine(endAtLastLine: bool) -> None : ...
    def setExtraAscent(extraAscent: int) -> None : ...
    def setExtraDescent(extraDescent: int) -> None : ...
    def setFirstVisibleLine(lineDisplay: int) -> None : ...
    def setFocus(focus: bool) -> None : ...
    def setFoldExpanded( line: int, expanded: bool) -> None : ...
    def setFoldFlags(flags: int) -> None : ...
    def setFoldLevel( line: int, level: int) -> None : ...
    def setFoldMarginColour( useSetting: bool, back: tuple) -> None : ...
    def setFoldMarginHiColour( useSetting: bool, fore: tuple) -> None : ...
    def setFontQuality(fontQuality: int) -> None : ...
    def setHScrollBar(show: bool) -> None : ...
    def setHighlightGuide(column: int) -> None : ...
    def setHotspotActiveBack( useSetting: bool, back: tuple) -> None : ...
    def setHotspotActiveFore( useSetting: bool, fore: tuple) -> None : ...
    def setHotspotActiveUnderline(underline: bool) -> None : ...
    def setHotspotSingleLine(singleLine: bool) -> None : ...
    def setIMEInteraction(imeInteraction: int) -> None : ...
    def setIdentifier(identifier: int) -> None : ...
    def setIdentifiers( style: int, identifiers: object) -> None : ...
    def setIndent(indentSize: int) -> None : ...
    def setIndentationGuides(indentView: int) -> None : ...
    def setIndicatorCurrent(indicator: int) -> None : ...
    def setIndicatorValue(value: int) -> None : ...
    def setKeyWords( keywordSet: int, keyWords: object) -> None : ...
    def setLayoutCache(mode: int) -> None : ...
    def setLengthForEncode(bytes: int) -> None : ...
    def setLexer(lexer: int) -> None : ...
    def setLexerLanguage(language: object) -> None : ...
    def setLineEndTypesAllowed(lineEndBitSet: int) -> None : ...
    def setLineIndentation( line: int, indentSize: int) -> None : ...
    def setLineState( line: int, state: int) -> None : ...
    def setMainSelection(selection: int) -> None : ...
    def setMarginCursorN( margin: int, cursor: int) -> None : ...
    def setMarginLeft(pixelWidth: int) -> None : ...
    def setMarginMaskN( margin: int, mask: int) -> None : ...
    def setMarginOptions(marginOptions: int) -> None : ...
    def setMarginRight(pixelWidth: int) -> None : ...
    def setMarginSensitiveN( margin: int, sensitive: bool) -> None : ...
    def setMarginTypeN( margin: int, marginType: int) -> None : ...
    def setMarginWidthN( margin: int, pixelWidth: int) -> None : ...
    def setModEventMask(mask: int) -> None : ...
    def setMouseDownCaptures(captures: bool) -> None : ...
    def setMouseDwellTime(periodMilliseconds: int) -> None : ...
    def setMouseSelectionRectangularSwitch(mouseSelectionRectangularSwitch: bool) -> None : ...
    def setMultiPaste(multiPaste: int) -> None : ...
    def setMultipleSelection(multipleSelection: bool) -> None : ...
    def setOvertype(overtype: bool) -> None : ...
    def setPasteConvertEndings(convert: bool) -> None : ...
    def setPhasesDraw(phases: int) -> None : ...
    def setPositionCache(size: int) -> None : ...
    def setPrintColourMode(mode: int) -> None : ...
    def setPrintMagnification(magnification: int) -> None : ...
    def setPrintWrapMode(mode: int) -> None : ...
    def setProperty( key: object, value: object) -> None : ...
    def setPunctuationChars(characters: object) -> None : ...
    def setReadOnly(readOnly: bool) -> None : ...
    def setRectangularSelectionAnchor(posAnchor: int) -> None : ...
    def setRectangularSelectionAnchorVirtualSpace(space: int) -> None : ...
    def setRectangularSelectionCaret(pos: int) -> None : ...
    def setRectangularSelectionCaretVirtualSpace(space: int) -> None : ...
    def setRectangularSelectionModifier(modifier: int) -> None : ...
    def setRepresentation( encodedCharacter: object, representation: object) -> None : ...
    def setSavePoint() -> None : ...
    def setScrollWidth(pixelWidth: int) -> None : ...
    def setScrollWidthTracking(tracking: bool) -> None : ...
    def setSearchFlags(flags: int) -> None : ...
    def setSel( start: int, end: int) -> None : ...
    def setSelAlpha(alpha: int) -> None : ...
    def setSelBack( useSetting: bool, back: tuple) -> None : ...
    def setSelEOLFilled(filled: bool) -> None : ...
    def setSelFore( useSetting: bool, fore: tuple) -> None : ...
    def setSelection( caret: int, anchor: int) -> int : ...
    def setSelectionEnd(pos: int) -> None : ...
    def setSelectionMode(mode: int) -> None : ...
    def setSelectionNAnchor( selection: int, posAnchor: int) -> None : ...
    def setSelectionNAnchorVirtualSpace( selection: int, space: int) -> None : ...
    def setSelectionNCaret( selection: int, pos: int) -> None : ...
    def setSelectionNCaretVirtualSpace( selection: int, space: int) -> None : ...
    def setSelectionNEnd( selection: int, pos: int) -> None : ...
    def setSelectionNStart( selection: int, pos: int) -> None : ...
    def setSelectionStart(pos: int) -> None : ...
    def setStatus(statusCode: int) -> None : ...
    def setStyleBits(bits: int) -> None : ...
    def setStyling( length: int, style: int) -> None : ...
    def setStylingEx(styles: object) -> int : ...
    def setTabIndents(tabIndents: bool) -> None : ...
    def setTabWidth(tabWidth: int) -> None : ...
    def setTarget( arg2: int, arg3: int) -> None : ...
    def setTargetEnd(pos: int) -> None : ...
    def setTargetRange( start: int, end: int) -> None : ...
    def setTargetStart(pos: int) -> None : ...
    def setTechnology(technology: int) -> None : ...
    def setText(text: object) -> None : ...
    def setTwoPhaseDraw(twoPhase: bool) -> None : ...
    def setUndoCollection(collectUndo: bool) -> None : ...
    def setUseTabs(useTabs: bool) -> None : ...
    def setVScrollBar(show: bool) -> None : ...
    def setViewEOL(visible: bool) -> None : ...
    def setViewWS(viewWS: int) -> None : ...
    def setVirtualSpaceOptions(virtualSpaceOptions: int) -> None : ...
    def setVisiblePolicy( visiblePolicy: int, visibleSlop: int) -> None : ...
    def setWhitespaceBack( useSetting: bool, back: tuple) -> None : ...
    def setWhitespaceChars(characters: object) -> None : ...
    def setWhitespaceFore( useSetting: bool, fore: tuple) -> None : ...
    def setWhitespaceSize(size: int) -> None : ...
    def setWordChars(characters: object) -> None : ...
    def setWrapIndentMode(mode: int) -> None : ...
    def setWrapMode(mode: int) -> None : ...
    def setWrapStartIndent(indent: int) -> None : ...
    def setWrapVisualFlags(wrapVisualFlags: int) -> None : ...
    def setWrapVisualFlagsLocation(wrapVisualFlagsLocation: int) -> None : ...
    def setXCaretPolicy( caretPolicy: int, caretSlop: int) -> None : ...
    def setXOffset(newOffset: int) -> None : ...
    def setYCaretPolicy( caretPolicy: int, caretSlop: int) -> None : ...
    def setZoom(zoom: int) -> None : ...
    def showLines( lineStart: int, lineEnd: int) -> None : ...
    def startRecord() -> None : ...
    def startStyling( pos: int, mask: int) -> None : ...
    def stopRecord() -> None : ...
    def stutteredPageDown() -> None : ...
    def stutteredPageDownExtend() -> None : ...
    def stutteredPageUp() -> None : ...
    def stutteredPageUpExtend() -> None : ...
    def styleClearAll() -> None : ...
    def styleGetBack(style: int) -> tuple : ...
    def styleGetBold(style: int) -> bool : ...
    def styleGetCase(style: int) -> int : ...
    def styleGetChangeable(style: int) -> bool : ...
    def styleGetCharacterSet(style: int) -> int : ...
    def styleGetEOLFilled(style: int) -> bool : ...
    def styleGetFont(style: int) -> str : ...
    def styleGetFore(style: int) -> tuple : ...
    def styleGetHotSpot(style: int) -> bool : ...
    def styleGetItalic(style: int) -> bool : ...
    def styleGetSize(style: int) -> int : ...
    def styleGetSizeFractional(style: int) -> int : ...
    def styleGetUnderline(style: int) -> bool : ...
    def styleGetVisible(style: int) -> bool : ...
    def styleGetWeight(style: int) -> int : ...
    def styleResetDefault() -> None : ...
    def styleSetBack( style: int, back: tuple) -> None : ...
    def styleSetBold( style: int, bold: bool) -> None : ...
    def styleSetCase( style: int, caseForce: int) -> None : ...
    def styleSetChangeable( style: int, changeable: bool) -> None : ...
    def styleSetCharacterSet( style: int, characterSet: int) -> None : ...
    def styleSetEOLFilled( style: int, filled: bool) -> None : ...
    def styleSetFont( style: int, fontName: object) -> None : ...
    def styleSetFore( style: int, fore: tuple) -> None : ...
    def styleSetHotSpot( style: int, hotspot: bool) -> None : ...
    def styleSetItalic( style: int, italic: bool) -> None : ...
    def styleSetSize( style: int, sizePoints: int) -> None : ...
    def styleSetSizeFractional( style: int, caseForce: int) -> None : ...
    def styleSetUnderline( style: int, underline: bool) -> None : ...
    def styleSetVisible( style: int, visible: bool) -> None : ...
    def styleSetWeight( style: int, weight: int) -> None : ...
    def swapMainAnchorCaret() -> None : ...
    def tab() -> None : ...
    def targetAsUTF8() -> str : ...
    def targetFromSelection() -> None : ...
    def textHeight(line: int) -> int : ...
    def textWidth( style: int, text: object) -> int : ...
    def toggleCaretSticky() -> None : ...
    def toggleFold(line: int) -> None : ...
    def undo() -> None : ...
    def upperCase() -> None : ...
    def usePopUp(allowPopUp: bool) -> None : ...
    def userListShow( listType: int, itemList: object) -> None : ...
    def vCHome() -> None : ...
    def vCHomeDisplay() -> None : ...
    def vCHomeDisplayExtend() -> None : ...
    def vCHomeExtend() -> None : ...
    def vCHomeRectExtend() -> None : ...
    def vCHomeWrap() -> None : ...
    def vCHomeWrapExtend() -> None : ...
    def verticalCentreCaret() -> None : ...
    def visibleFromDocLine(line: int) -> int : ...
    def wordEndPosition( pos: int, onlyWordCharacters: bool) -> int : ...
    def wordLeft() -> None : ...
    def wordLeftEnd() -> None : ...
    def wordLeftEndExtend() -> None : ...
    def wordLeftExtend() -> None : ...
    def wordPartLeft() -> None : ...
    def wordPartLeftExtend() -> None : ...
    def wordPartRight() -> None : ...
    def wordPartRightExtend() -> None : ...
    def wordRight() -> None : ...
    def wordRightEnd() -> None : ...
    def wordRightEndExtend() -> None : ...
    def wordRightExtend() -> None : ...
    def wordStartPosition( pos: int, onlyWordCharacters: bool) -> int : ...
    def wrapCount(line: int) -> int : ...
    def write(arg2: object) -> int : ...
    def zoomIn() -> None : ...
    def zoomOut() -> None : ...


class notepad:
    def activateBufferID(bufferID: int) -> None : ...
    def activateFile(filename: str) -> None : ...
    def activateIndex( view: int, index: int) -> None : ...
    def allocateCmdID(arg2: int) -> object : ...
    def allocateMarker(arg2: int) -> object : ...
    def allocateSupported() -> bool : ...
    def callback( callable: object, listOfNotifications: list) -> bool : ...
    def clearCallbacks() -> None : ...
    def close() -> None : ...
    def closeAll() -> None : ...
    def closeAllButCurrent() -> None : ...
    def createScintilla() -> Editor : ...
    def decodeSci(view: int) -> int : ...
    def destroyScintilla(_editor: Editor) -> None : ...
    def disableAutoUpdate() -> None : ...
    def docSwitcherDisableColumn(boolean: bool) -> None : ...
    def encodeSci(view: int) -> int : ...
    def flashWindow( count: int, milliseconds: int) -> None : ...
    def getAppdataPluginsAllowed() -> bool : ...
    def getBufferFilename(bufferID: int) -> str : ...
    def getCommandLine() -> str : ...
    def getCurrentBufferID() -> int : ...
    def getCurrentDocIndex(view: int) -> int : ...
    def getCurrentFilename() -> str : ...
    def getCurrentLang() -> LANGTYPE : ...
    def getCurrentNativeLangEncoding() -> int : ...
    def getCurrentView() -> int : ...
    def getEditorDefaultBackgroundColor() -> tuple : ...
    def getEditorDefaultForegroundColor() -> tuple : ...
    def getEnableThemeTextureFunc() -> bool : ...
    def getEncoding() -> BUFFERENCODING : ...
    def getFiles() -> list : ...
    def getFormatType() -> FORMATTYPE : ...
    def getLangType() -> LANGTYPE : ...
    def getLanguageDesc(langType: int) -> str : ...
    def getLanguageName(langType: int) -> str : ...
    def getMenuHandle(menu: int) -> int : ...
    def getNbUserLang() -> int : ...
    def getNppDir() -> str : ...
    def getPluginConfigDir() -> str : ...
    def getPluginHomePath() -> str : ...
    def getPluginMenuHandle() -> int : ...
    def getPluginVersion() -> str : ...
    def getSessionFiles(sessionFileName: str) -> list : ...
    def getVersion() -> tuple : ...
    def getWindowsVersion() -> WINVER : ...
    def hideMenu(boolean: bool) -> bool : ...
    def hideStatusBar(boolean: bool) -> bool : ...
    def hideTabBar() -> None : ...
    def hideToolBar(boolean: bool) -> bool : ...
    def isDocSwitcherShown() -> bool : ...
    def isMenuHidden() -> bool : ...
    def isSingleView() -> bool : ...
    def isStatusBarHidden() -> bool : ...
    def isTabBarHidden() -> bool : ...
    def isToolBarHidden() -> bool : ...
    def launchFindInFilesDlg( arg2: unicode, dir2Search: unicode, filter) -> None : ...
    def loadSession(sessionFileName: str) -> None : ...
    def makeCurrentBufferDirty() -> bool : ...
    def menuCommand(commandID: int) -> None : ...
    def messageBox(message: str, caption: Optional[str], flags: Optional[int]) -> int : ...
    def new() -> None : ...
    def open(filename: str) -> None : ...
    def outputDebugString(arg2: str) -> None : ...
    def prompt(prompt: object, title: object) -> object : ...
    def reloadBuffer(arg2: long, arg3: bool) -> None : ...
    def reloadCurrentDocument() -> None : ...
    def reloadFile(filename: str, alertUser: bool) -> None : ...
    def runMenuCommand(menuName: str, optionName: str, refreshMenuItemCache: Optional[bool]) -> bool : ...
    def runPluginCommand(pluginName: str, optionName: str, refreshMenuItemCache: bool) -> bool : ...
    def save() -> None : ...
    def saveAllFiles() -> None : ...
    def saveAs(filename: str) -> None : ...
    def saveAsCopy(filename: str) -> None : ...
    def saveCurrentSession(sessionFileName: str) -> None : ...
    def saveFile(filename: str) -> None : ...
    def saveSession(sessionFileName: str, listOfFileNames: list) -> None : ...
    def setEditorBorderEdge(boolean: bool) -> None : ...
    def setEncoding(encoding: BUFFERENCODING) -> None : ...
    def setFormatType(formatType: FORMATTYPE) -> None : ...
    def setLangType(langType: LANGTYPE) -> None : ...
    def setSmoothFont(boolean: bool) -> None : ...
    def setStatusBar( section: STATUSBARSECTION, text: str) -> None : ...
    def showDocSwitcher(boolean: bool) -> None : ...
    def showTabBar() -> None : ...
    def triggerTabbarContextMenu( arg2: int, view: int, index2Activate) -> None : ...


class FORMATTYPE(IntEnum, metaclass=EnhancedIntEnum):
    ''' FORMATTYPE '''
    WIN = 0
    MAC = 1
    UNIX = 2


class LANGTYPE(IntEnum, metaclass=EnhancedIntEnum):
    ''' LANGTYPE '''
    TEXT = 0
    PHP = 1
    C = 2
    CPP = 3
    CS = 4
    OBJC = 5
    JAVA = 6
    RC = 7
    HTML = 8
    XML = 9
    MAKEFILE = 10
    PASCAL = 11
    BATCH = 12
    INI = 13
    ASCII = 14
    USER = 15
    ASP = 16
    SQL = 17
    VB = 18
    JS = 19
    CSS = 20
    PERL = 21
    PYTHON = 22
    LUA = 23
    TEX = 24
    FORTRAN = 25
    BASH = 26
    FLASH = 27
    NSIS = 28
    TCL = 29
    LISP = 30
    SCHEME = 31
    ASM = 32
    DIFF = 33
    PROPS = 34
    PS = 35
    RUBY = 36
    SMALLTALK = 37
    VHDL = 38
    KIX = 39
    AU3 = 40
    CAML = 41
    ADA = 42
    VERILOG = 43
    MATLAB = 44
    HASKELL = 45
    INNO = 46
    SEARCHRESULT = 47
    CMAKE = 48
    YAML = 49
    COBOL = 50
    GUI4CLI = 51
    D = 52
    POWERSHELL = 53
    R = 54
    JSP = 55
    COFFEESCRIPT = 56
    JSON = 57
    JAVASCRIPT = 58
    FORTRAN_77 = 59
    BAANC = 60
    SREC = 61
    IHEX = 62
    TEHEX = 63
    SWIFT = 64
    ASN1 = 65
    AVS = 66
    BLITZBASIC = 67
    PUREBASIC = 68
    FREEBASIC = 69
    CSOUND = 70
    ERLANG = 71
    ESCRIPT = 72
    FORTH = 73
    LATEX = 74
    MMIXAL = 75
    NIMROD = 76
    NNCRONTAB = 77
    OSCRIPT = 78
    REBOL = 79
    REGISTRY = 80
    RUST = 81
    SPICE = 82
    TXT2TAGS = 83
    VISUALPROLOG = 84
    EXTERNAL = 85


class WINVER(IntEnum, metaclass=EnhancedIntEnum):
    ''' WINVER '''
    WV_UNKNOWN = 0
    WV_WIN32S = 1
    WV_95 = 2
    WV_98 = 3
    WV_ME = 4
    WV_NT = 5
    WV_W2K = 6
    WV_XP = 7
    WV_S2003 = 8
    WV_XPX64 = 9
    WV_VISTA = 10
    WV_WIN7 = 11
    WV_WIN8 = 12
    WV_WIN81 = 13
    WV_WIN10 = 14


class PLATFORM(IntEnum, metaclass=EnhancedIntEnum):
    ''' PLATFORM '''
    UNKNOWN = 0
    X86 = 1
    X64 = 2
    IA64 = 3


class MENUCOMMAND(IntEnum, metaclass=EnhancedIntEnum):
    ''' MENUCOMMAND '''
    _IDM = 40000
    _FILE = _IDM + 1000
    FILE_NEW = _FILE + 1
    FILE_OPEN = _FILE + 2
    FILE_CLOSE = _FILE + 3
    FILE_CLOSEALL = _FILE + 4
    FILE_CLOSEALL_BUT_CURRENT = _FILE + 5
    FILE_SAVE = _FILE + 6
    FILE_SAVEALL = _FILE + 7
    FILE_SAVEAS = _FILE + 8
    FILE_CLOSEALL_TOLEFT = _FILE + 9
    FILE_PRINT = _FILE + 10
    #define    FILE_PRINTNOW                1001
    FILE_EXIT = _FILE + 11
    FILE_LOADSESSION = _FILE + 12
    FILE_SAVESESSION = _FILE + 13
    FILE_RELOAD = _FILE + 14
    FILE_SAVECOPYAS = _FILE + 15
    FILE_DELETE = _FILE + 16
    FILE_RENAME = _FILE + 17
    FILE_CLOSEALL_TORIGHT = _FILE + 18
    FILE_OPEN_FOLDER = _FILE + 19
    FILE_OPEN_CMD = _FILE + 20
    FILE_RESTORELASTCLOSEDFILE = _FILE + 21
    FILE_OPENFOLDERASWORSPACE = _FILE + 22
    FILE_OPEN_DEFAULT_VIEWER = _FILE + 23
    FILE_CLOSEALL_UNCHANGED = _FILE + 24

    #define    FILEMENU_LASTONE             FILE_CLOSEALL_UNCHANGED

    # 0 based position of command "Exit" including the bars in the file menu
    # and without counting "Recent files history" items

    # 0  New
    # 1  Open...
    # 2  Open Containing Folder
    # 3  Open Folder as Workspace
    # 4  Open in Default Viewer
    # 5  Reload from Disk
    # 6  Save
    # 7  Save As...
    # 8  Save a Copy As...
    # 9  Save All
    #10  Rename...
    #11  Close
    #12  Close All
    #13  Close More
    #14  Move to Recycle Bin
    #15  --------
    #16  Load Session...
    #17  Save Session...
    #18  --------
    #19  Print...
    #20  Print Now
    #21  --------
    #22  Exit
    #define    FILEMENU_EXISTCMDPOSITION    22


    _EDIT = _IDM + 2000
    EDIT_CUT = _EDIT + 1
    EDIT_COPY = _EDIT + 2
    EDIT_UNDO = _EDIT + 3
    EDIT_REDO = _EDIT + 4
    EDIT_PASTE = _EDIT + 5
    EDIT_DELETE = _EDIT + 6
    EDIT_SELECTALL = _EDIT + 7
    EDIT_BEGINENDSELECT = _EDIT + 20

    EDIT_INS_TAB = _EDIT + 8
    EDIT_RMV_TAB = _EDIT + 9
    EDIT_DUP_LINE = _EDIT + 10
    EDIT_REMOVE_DUP_LINES = _EDIT + 77
    EDIT_TRANSPOSE_LINE = _EDIT + 11
    EDIT_SPLIT_LINES = _EDIT + 12
    EDIT_JOIN_LINES = _EDIT + 13
    EDIT_LINE_UP = _EDIT + 14
    EDIT_LINE_DOWN = _EDIT + 15
    EDIT_UPPERCASE = _EDIT + 16
    EDIT_LOWERCASE = _EDIT + 17
    EDIT_PROPERCASE_FORCE = _EDIT + 67
    EDIT_PROPERCASE_BLEND = _EDIT + 68
    EDIT_SENTENCECASE_FORCE = _EDIT + 69
    EDIT_SENTENCECASE_BLEND = _EDIT + 70
    EDIT_INVERTCASE = _EDIT + 71
    EDIT_RANDOMCASE = _EDIT + 72
    EDIT_REMOVEEMPTYLINES = _EDIT + 55
    EDIT_REMOVEEMPTYLINESWITHBLANK = _EDIT + 56
    EDIT_BLANKLINEABOVECURRENT = _EDIT + 57
    EDIT_BLANKLINEBELOWCURRENT = _EDIT + 58
    EDIT_SORTLINES_LEXICOGRAPHIC_ASCENDING = _EDIT + 59
    EDIT_SORTLINES_LEXICOGRAPHIC_DESCENDING = _EDIT + 60
    EDIT_SORTLINES_INTEGER_ASCENDING = _EDIT + 61
    EDIT_SORTLINES_INTEGER_DESCENDING = _EDIT + 62
    EDIT_SORTLINES_DECIMALCOMMA_ASCENDING = _EDIT + 63
    EDIT_SORTLINES_DECIMALCOMMA_DESCENDING = _EDIT + 64
    EDIT_SORTLINES_DECIMALDOT_ASCENDING = _EDIT + 65
    EDIT_SORTLINES_DECIMALDOT_DESCENDING = _EDIT + 66

    EDIT_OPENASFILE = _EDIT + 73
    EDIT_OPENINFOLDER = _EDIT + 74
    EDIT_SEARCHONINTERNET = _EDIT + 75
    EDIT_CHANGESEARCHENGINE = _EDIT + 76

    # Menu macro
    MACRO_STARTRECORDINGMACRO = _EDIT + 18
    MACRO_STOPRECORDINGMACRO = _EDIT + 19
    MACRO_PLAYBACKRECORDEDMACRO = _EDIT + 21
    #-----------

    EDIT_BLOCK_COMMENT = _EDIT + 22
    EDIT_STREAM_COMMENT = _EDIT + 23
    EDIT_TRIMTRAILING = _EDIT + 24
    EDIT_TRIMLINEHEAD = _EDIT + 42
    EDIT_TRIM_BOTH = _EDIT + 43
    EDIT_EOL2WS = _EDIT + 44
    EDIT_TRIMALL = _EDIT + 45
    EDIT_TAB2SW = _EDIT + 46
    EDIT_SW2TAB_LEADING = _EDIT + 53
    EDIT_SW2TAB_ALL = _EDIT + 54
    EDIT_STREAM_UNCOMMENT = _EDIT + 47

    # Menu macro
    MACRO_SAVECURRENTMACRO = _EDIT + 25
    #-----------

    EDIT_RTL = _EDIT + 26
    EDIT_LTR = _EDIT + 27
    EDIT_SETREADONLY = _EDIT + 28
    EDIT_FULLPATHTOCLIP = _EDIT + 29
    EDIT_FILENAMETOCLIP = _EDIT + 30
    EDIT_CURRENTDIRTOCLIP = _EDIT + 31

    # Menu macro
    MACRO_RUNMULTIMACRODLG = _EDIT + 32
    #-----------

    EDIT_CLEARREADONLY = _EDIT + 33
    EDIT_COLUMNMODE = _EDIT + 34
    EDIT_BLOCK_COMMENT_SET = _EDIT + 35
    EDIT_BLOCK_UNCOMMENT = _EDIT + 36
    EDIT_COLUMNMODETIP = _EDIT + 37
    EDIT_PASTE_AS_HTML = _EDIT + 38
    EDIT_PASTE_AS_RTF = _EDIT + 39
    EDIT_COPY_BINARY = _EDIT + 48
    EDIT_CUT_BINARY = _EDIT + 49
    EDIT_PASTE_BINARY = _EDIT + 50
    EDIT_CHAR_PANEL = _EDIT + 51
    EDIT_CLIPBOARDHISTORY_PANEL = _EDIT + 52

    EDIT_AUTOCOMPLETE = 50000 + 0
    EDIT_AUTOCOMPLETE_CURRENTFILE = 50000 + 1
    EDIT_FUNCCALLTIP = 50000 + 2
    EDIT_AUTOCOMPLETE_PATH = 50000 + 6

    #Belong to MENU FILE
    OPEN_ALL_RECENT_FILE = _EDIT + 40
    CLEAN_RECENT_FILE_LIST = _EDIT + 41

    _SEARCH = _IDM + 3000
    SEARCH_FIND = _SEARCH + 1
    SEARCH_FINDNEXT = _SEARCH + 2
    SEARCH_REPLACE = _SEARCH + 3
    SEARCH_GOTOLINE = _SEARCH + 4
    SEARCH_TOGGLE_BOOKMARK = _SEARCH + 5
    SEARCH_NEXT_BOOKMARK = _SEARCH + 6
    SEARCH_PREV_BOOKMARK = _SEARCH + 7
    SEARCH_CLEAR_BOOKMARKS = _SEARCH + 8
    SEARCH_GOTOMATCHINGBRACE = _SEARCH + 9
    SEARCH_FINDPREV = _SEARCH + 10
    SEARCH_FINDINCREMENT = _SEARCH + 11
    SEARCH_FINDINFILES = _SEARCH + 13
    SEARCH_VOLATILE_FINDNEXT = _SEARCH + 14
    SEARCH_VOLATILE_FINDPREV = _SEARCH + 15
    SEARCH_CUTMARKEDLINES = _SEARCH + 18
    SEARCH_COPYMARKEDLINES = _SEARCH + 19
    SEARCH_PASTEMARKEDLINES = _SEARCH + 20
    SEARCH_DELETEMARKEDLINES = _SEARCH + 21
    SEARCH_MARKALLEXT1 = _SEARCH + 22
    SEARCH_UNMARKALLEXT1 = _SEARCH + 23
    SEARCH_MARKALLEXT2 = _SEARCH + 24
    SEARCH_UNMARKALLEXT2 = _SEARCH + 25
    SEARCH_MARKALLEXT3 = _SEARCH + 26
    SEARCH_UNMARKALLEXT3 = _SEARCH + 27
    SEARCH_MARKALLEXT4 = _SEARCH + 28
    SEARCH_UNMARKALLEXT4 = _SEARCH + 29
    SEARCH_MARKALLEXT5 = _SEARCH + 30
    SEARCH_UNMARKALLEXT5 = _SEARCH + 31
    SEARCH_CLEARALLMARKS = _SEARCH + 32

    SEARCH_GOPREVMARKER1 = _SEARCH + 33
    SEARCH_GOPREVMARKER2 = _SEARCH + 34
    SEARCH_GOPREVMARKER3 = _SEARCH + 35
    SEARCH_GOPREVMARKER4 = _SEARCH + 36
    SEARCH_GOPREVMARKER5 = _SEARCH + 37
    SEARCH_GOPREVMARKER_DEF = _SEARCH + 38

    SEARCH_GONEXTMARKER1 = _SEARCH + 39
    SEARCH_GONEXTMARKER2 = _SEARCH + 40
    SEARCH_GONEXTMARKER3 = _SEARCH + 41
    SEARCH_GONEXTMARKER4 = _SEARCH + 42
    SEARCH_GONEXTMARKER5 = _SEARCH + 43
    SEARCH_GONEXTMARKER_DEF = _SEARCH + 44

    FOCUS_ON_FOUND_RESULTS = _SEARCH + 45
    SEARCH_GOTONEXTFOUND = _SEARCH + 46
    SEARCH_GOTOPREVFOUND = _SEARCH + 47

    SEARCH_SETANDFINDNEXT = _SEARCH + 48
    SEARCH_SETANDFINDPREV = _SEARCH + 49
    SEARCH_INVERSEMARKS = _SEARCH + 50
    SEARCH_DELETEUNMARKEDLINES = _SEARCH + 51
    SEARCH_FINDCHARINRANGE = _SEARCH + 52
    SEARCH_SELECTMATCHINGBRACES = _SEARCH + 53
    SEARCH_MARK = _SEARCH + 54

    _MISC = _IDM + 3500
    FILESWITCHER_FILESCLOSE = _MISC + 1
    FILESWITCHER_FILESCLOSEOTHERS = _MISC + 2


    _VIEW = _IDM + 4000
    #VIEW_TOOLBAR_HIDE = _VIEW + 1
    VIEW_TOOLBAR_REDUCE = _VIEW + 2
    VIEW_TOOLBAR_ENLARGE = _VIEW + 3
    VIEW_TOOLBAR_STANDARD = _VIEW + 4
    VIEW_REDUCETABBAR = _VIEW + 5
    VIEW_LOCKTABBAR = _VIEW + 6
    VIEW_DRAWTABBAR_TOPBAR = _VIEW + 7
    VIEW_DRAWTABBAR_INACIVETAB = _VIEW + 8
    VIEW_POSTIT = _VIEW + 9
    VIEW_TOGGLE_FOLDALL = _VIEW + 10
    #VIEW_USER_DLG = _VIEW + 11
    VIEW_LINENUMBER = _VIEW + 12
    VIEW_SYMBOLMARGIN = _VIEW + 13
    VIEW_FOLDERMAGIN = _VIEW + 14
    VIEW_FOLDERMAGIN_SIMPLE = _VIEW + 15
    VIEW_FOLDERMAGIN_ARROW = _VIEW + 16
    VIEW_FOLDERMAGIN_CIRCLE = _VIEW + 17
    VIEW_FOLDERMAGIN_BOX = _VIEW + 18
    VIEW_ALL_CHARACTERS = _VIEW + 19
    VIEW_INDENT_GUIDE = _VIEW + 20
    VIEW_CURLINE_HILITING = _VIEW + 21
    VIEW_WRAP = _VIEW + 22
    VIEW_ZOOMIN = _VIEW + 23
    VIEW_ZOOMOUT = _VIEW + 24
    VIEW_TAB_SPACE = _VIEW + 25
    VIEW_EOL = _VIEW + 26
    VIEW_EDGELINE = _VIEW + 27
    VIEW_EDGEBACKGROUND = _VIEW + 28
    VIEW_TOGGLE_UNFOLDALL = _VIEW + 29
    VIEW_FOLD_CURRENT = _VIEW + 30
    VIEW_UNFOLD_CURRENT = _VIEW + 31
    VIEW_FULLSCREENTOGGLE = _VIEW + 32
    VIEW_ZOOMRESTORE = _VIEW + 33
    VIEW_ALWAYSONTOP = _VIEW + 34
    VIEW_SYNSCROLLV = _VIEW + 35
    VIEW_SYNSCROLLH = _VIEW + 36
    VIEW_EDGENONE = _VIEW + 37
    VIEW_DRAWTABBAR_CLOSEBOTTUN = _VIEW + 38
    VIEW_DRAWTABBAR_DBCLK2CLOSE = _VIEW + 39
    VIEW_REFRESHTABAR = _VIEW + 40
    VIEW_WRAP_SYMBOL = _VIEW + 41
    VIEW_HIDELINES = _VIEW + 42
    VIEW_DRAWTABBAR_VERTICAL = _VIEW + 43
    VIEW_DRAWTABBAR_MULTILINE = _VIEW + 44
    VIEW_DOCCHANGEMARGIN = _VIEW + 45
    VIEW_LWDEF = _VIEW + 46
    VIEW_LWALIGN = _VIEW + 47
    VIEW_LWINDENT = _VIEW + 48
    VIEW_SUMMARY = _VIEW + 49

    VIEW_FOLD = _VIEW + 50
    VIEW_FOLD_1 = VIEW_FOLD + 1
    VIEW_FOLD_2 = VIEW_FOLD + 2
    VIEW_FOLD_3 = VIEW_FOLD + 3
    VIEW_FOLD_4 = VIEW_FOLD + 4
    VIEW_FOLD_5 = VIEW_FOLD + 5
    VIEW_FOLD_6 = VIEW_FOLD + 6
    VIEW_FOLD_7 = VIEW_FOLD + 7
    VIEW_FOLD_8 = VIEW_FOLD + 8

    VIEW_UNFOLD = _VIEW + 60
    VIEW_UNFOLD_1 = VIEW_UNFOLD + 1
    VIEW_UNFOLD_2 = VIEW_UNFOLD + 2
    VIEW_UNFOLD_3 = VIEW_UNFOLD + 3
    VIEW_UNFOLD_4 = VIEW_UNFOLD + 4
    VIEW_UNFOLD_5 = VIEW_UNFOLD + 5
    VIEW_UNFOLD_6 = VIEW_UNFOLD + 6
    VIEW_UNFOLD_7 = VIEW_UNFOLD + 7
    VIEW_UNFOLD_8 = VIEW_UNFOLD + 8

    VIEW_FILESWITCHER_PANEL = _VIEW + 70
    VIEW_SWITCHTO_OTHER_VIEW = _VIEW + 72
    EXPORT_FUNC_LIST_AND_QUIT = _VIEW + 73

    VIEW_DOC_MAP = _VIEW + 80

    VIEW_PROJECT_PANEL_1 = _VIEW + 81
    VIEW_PROJECT_PANEL_2 = _VIEW + 82
    VIEW_PROJECT_PANEL_3 = _VIEW + 83

    VIEW_FUNC_LIST = _VIEW + 84
    VIEW_FILEBROWSER = _VIEW + 85

    VIEW_TAB1 = _VIEW + 86
    VIEW_TAB2 = _VIEW + 87
    VIEW_TAB3 = _VIEW + 88
    VIEW_TAB4 = _VIEW + 89
    VIEW_TAB5 = _VIEW + 90
    VIEW_TAB6 = _VIEW + 91
    VIEW_TAB7 = _VIEW + 92
    VIEW_TAB8 = _VIEW + 93
    VIEW_TAB9 = _VIEW + 94
    VIEW_TAB_NEXT = _VIEW + 95
    VIEW_TAB_PREV = _VIEW + 96
    VIEW_MONITORING = _VIEW + 97
    VIEW_TAB_MOVEFORWARD = _VIEW + 98
    VIEW_TAB_MOVEBACKWARD = _VIEW + 99
    VIEW_IN_FIREFOX = _VIEW + 100
    VIEW_IN_CHROME = _VIEW + 101
    VIEW_IN_EDGE = _VIEW + 102
    VIEW_IN_IE = _VIEW + 103

    VIEW_GOTO_ANOTHER_VIEW = 10001
    VIEW_CLONE_TO_ANOTHER_VIEW = 10002
    VIEW_GOTO_NEW_INSTANCE = 10003
    VIEW_LOAD_IN_NEW_INSTANCE = 10004


    _FORMAT = _IDM + 5000
    FORMAT_TODOS = _FORMAT + 1
    FORMAT_TOUNIX = _FORMAT + 2
    FORMAT_TOMAC = _FORMAT + 3
    FORMAT_ANSI = _FORMAT + 4
    FORMAT_UTF_8 = _FORMAT + 5
    FORMAT_UCS_2BE = _FORMAT + 6
    FORMAT_UCS_2LE = _FORMAT + 7
    FORMAT_AS_UTF_8 = _FORMAT + 8
    FORMAT_CONV2_ANSI = _FORMAT + 9
    FORMAT_CONV2_AS_UTF_8 = _FORMAT + 10
    FORMAT_CONV2_UTF_8 = _FORMAT + 11
    FORMAT_CONV2_UCS_2BE = _FORMAT + 12
    FORMAT_CONV2_UCS_2LE = _FORMAT + 13

    FORMAT_ENCODE = _FORMAT + 20
    FORMAT_WIN_1250 = FORMAT_ENCODE + 0
    FORMAT_WIN_1251 = FORMAT_ENCODE + 1
    FORMAT_WIN_1252 = FORMAT_ENCODE + 2
    FORMAT_WIN_1253 = FORMAT_ENCODE + 3
    FORMAT_WIN_1254 = FORMAT_ENCODE + 4
    FORMAT_WIN_1255 = FORMAT_ENCODE + 5
    FORMAT_WIN_1256 = FORMAT_ENCODE + 6
    FORMAT_WIN_1257 = FORMAT_ENCODE + 7
    FORMAT_WIN_1258 = FORMAT_ENCODE + 8
    FORMAT_ISO_8859_1 = FORMAT_ENCODE + 9
    FORMAT_ISO_8859_2 = FORMAT_ENCODE + 10
    FORMAT_ISO_8859_3 = FORMAT_ENCODE + 11
    FORMAT_ISO_8859_4 = FORMAT_ENCODE + 12
    FORMAT_ISO_8859_5 = FORMAT_ENCODE + 13
    FORMAT_ISO_8859_6 = FORMAT_ENCODE + 14
    FORMAT_ISO_8859_7 = FORMAT_ENCODE + 15
    FORMAT_ISO_8859_8 = FORMAT_ENCODE + 16
    FORMAT_ISO_8859_9 = FORMAT_ENCODE + 17
    #FORMAT_ISO_8859_10 = FORMAT_ENCODE + 18
    #FORMAT_ISO_8859_11 = FORMAT_ENCODE + 19
    FORMAT_ISO_8859_13 = FORMAT_ENCODE + 20
    FORMAT_ISO_8859_14 = FORMAT_ENCODE + 21
    FORMAT_ISO_8859_15 = FORMAT_ENCODE + 22
    #FORMAT_ISO_8859_16 = FORMAT_ENCODE + 23
    FORMAT_DOS_437 = FORMAT_ENCODE + 24
    FORMAT_DOS_720 = FORMAT_ENCODE + 25
    FORMAT_DOS_737 = FORMAT_ENCODE + 26
    FORMAT_DOS_775 = FORMAT_ENCODE + 27
    FORMAT_DOS_850 = FORMAT_ENCODE + 28
    FORMAT_DOS_852 = FORMAT_ENCODE + 29
    FORMAT_DOS_855 = FORMAT_ENCODE + 30
    FORMAT_DOS_857 = FORMAT_ENCODE + 31
    FORMAT_DOS_858 = FORMAT_ENCODE + 32
    FORMAT_DOS_860 = FORMAT_ENCODE + 33
    FORMAT_DOS_861 = FORMAT_ENCODE + 34
    FORMAT_DOS_862 = FORMAT_ENCODE + 35
    FORMAT_DOS_863 = FORMAT_ENCODE + 36
    FORMAT_DOS_865 = FORMAT_ENCODE + 37
    FORMAT_DOS_866 = FORMAT_ENCODE + 38
    FORMAT_DOS_869 = FORMAT_ENCODE + 39
    FORMAT_BIG5 = FORMAT_ENCODE + 40
    FORMAT_GB2312 = FORMAT_ENCODE + 41
    FORMAT_SHIFT_JIS = FORMAT_ENCODE + 42
    FORMAT_KOREAN_WIN = FORMAT_ENCODE + 43
    FORMAT_EUC_KR = FORMAT_ENCODE + 44
    FORMAT_TIS_620 = FORMAT_ENCODE + 45
    FORMAT_MAC_CYRILLIC = FORMAT_ENCODE + 46
    FORMAT_KOI8U_CYRILLIC = FORMAT_ENCODE + 47
    FORMAT_KOI8R_CYRILLIC = FORMAT_ENCODE + 48
    FORMAT_ENCODE_END = FORMAT_KOI8R_CYRILLIC

    ##define    FORMAT_CONVERT           200

    _LANG = _IDM + 6000
    LANGSTYLE_CONFIG_DLG = _LANG + 1
    LANG_C = _LANG + 2
    LANG_CPP = _LANG + 3
    LANG_JAVA = _LANG + 4
    LANG_HTML = _LANG + 5
    LANG_XML = _LANG + 6
    LANG_JS = _LANG + 7
    LANG_PHP = _LANG + 8
    LANG_ASP = _LANG + 9
    LANG_CSS = _LANG + 10
    LANG_PASCAL = _LANG + 11
    LANG_PYTHON = _LANG + 12
    LANG_PERL = _LANG + 13
    LANG_OBJC = _LANG + 14
    LANG_ASCII = _LANG + 15
    LANG_TEXT = _LANG + 16
    LANG_RC = _LANG + 17
    LANG_MAKEFILE = _LANG + 18
    LANG_INI = _LANG + 19
    LANG_SQL = _LANG + 20
    LANG_VB = _LANG + 21
    LANG_BATCH = _LANG + 22
    LANG_CS = _LANG + 23
    LANG_LUA = _LANG + 24
    LANG_TEX = _LANG + 25
    LANG_FORTRAN = _LANG + 26
    LANG_BASH = _LANG + 27
    LANG_FLASH = _LANG + 28
    LANG_NSIS = _LANG + 29
    LANG_TCL = _LANG + 30
    LANG_LISP = _LANG + 31
    LANG_SCHEME = _LANG + 32
    LANG_ASM = _LANG + 33
    LANG_DIFF = _LANG + 34
    LANG_PROPS = _LANG + 35
    LANG_PS = _LANG + 36
    LANG_RUBY = _LANG + 37
    LANG_SMALLTALK = _LANG + 38
    LANG_VHDL = _LANG + 39
    LANG_CAML = _LANG + 40
    LANG_KIX = _LANG + 41
    LANG_ADA = _LANG + 42
    LANG_VERILOG = _LANG + 43
    LANG_AU3 = _LANG + 44
    LANG_MATLAB = _LANG + 45
    LANG_HASKELL = _LANG + 46
    LANG_INNO = _LANG + 47
    LANG_CMAKE = _LANG + 48
    LANG_YAML = _LANG + 49
    LANG_COBOL = _LANG + 50
    LANG_D = _LANG + 51
    LANG_GUI4CLI = _LANG + 52
    LANG_POWERSHELL = _LANG + 53
    LANG_R = _LANG + 54
    LANG_JSP = _LANG + 55
    LANG_COFFEESCRIPT = _LANG + 56
    LANG_JSON = _LANG + 57
    LANG_FORTRAN_77 = _LANG + 58
    LANG_BAANC = _LANG + 59
    LANG_SREC = _LANG + 60
    LANG_IHEX = _LANG + 61
    LANG_TEHEX = _LANG + 62
    LANG_SWIFT = _LANG + 63
    LANG_ASN1 = _LANG + 64
    LANG_AVS = _LANG + 65
    LANG_BLITZBASIC = _LANG + 66
    LANG_PUREBASIC = _LANG + 67
    LANG_FREEBASIC = _LANG + 68
    LANG_CSOUND = _LANG + 69
    LANG_ERLANG = _LANG + 70
    LANG_ESCRIPT = _LANG + 71
    LANG_FORTH = _LANG + 72
    LANG_LATEX = _LANG + 73
    LANG_MMIXAL = _LANG + 74
    LANG_NIMROD = _LANG + 75
    LANG_NNCRONTAB = _LANG + 76
    LANG_OSCRIPT = _LANG + 77
    LANG_REBOL = _LANG + 78
    LANG_REGISTRY = _LANG + 79
    LANG_RUST = _LANG + 80
    LANG_SPICE = _LANG + 81
    LANG_TXT2TAGS = _LANG + 82
    LANG_VISUALPROLOG = _LANG + 83

    LANG_EXTERNAL = _LANG + 165
    LANG_EXTERNAL_LIMIT = _LANG + 179

    LANG_USER = _LANG + 180     #46180: Used for translation
    LANG_USER_LIMIT = _LANG + 210     #46210: Ajust with LANG_USER
    LANG_USER_DLG = _LANG + 250     #46250: Used for translation




    _ABOUT = _IDM  + 7000
    HOMESWEETHOME = _ABOUT  + 1
    PROJECTPAGE = _ABOUT  + 2
    ONLINEHELP = _ABOUT  + 3
    FORUM = _ABOUT  + 4
    #PLUGINSHOME = _ABOUT  + 5
    UPDATE_NPP = _ABOUT  + 6
    WIKIFAQ = _ABOUT  + 7
    HELP = _ABOUT  + 8
    CONFUPDATERPROXY = _ABOUT  + 9
    CMDLINEARGUMENTS = _ABOUT  + 10
    ONLINESUPPORT = _ABOUT  + 11
    DEBUGINFO = _ABOUT  + 12


    _SETTING = _IDM + 8000
    #    SETTING_TAB_SIZE = _SETTING + 1
    #    SETTING_TAB_REPLCESPACE = _SETTING + 2
    #    SETTING_HISTORY_SIZE = _SETTING + 3
    #    SETTING_EDGE_SIZE = _SETTING + 4
    SETTING_IMPORTPLUGIN = _SETTING + 5
    SETTING_IMPORTSTYLETHEMS = _SETTING + 6
    SETTING_TRAYICON = _SETTING + 8
    SETTING_SHORTCUT_MAPPER = _SETTING + 9
    SETTING_REMEMBER_LAST_SESSION = _SETTING + 10
    SETTING_PREFERENCE = _SETTING + 11
    SETTING_OPENPLUGINSDIR = _SETTING + 14
    SETTING_PLUGINADM = _SETTING + 15
    SETTING_SHORTCUT_MAPPER_MACRO = _SETTING + 16
    SETTING_SHORTCUT_MAPPER_RUN = _SETTING + 17
    SETTING_EDITCONTEXTMENU = _SETTING + 18

    _TOOL = _IDM + 8500
    TOOL_MD5_GENERATE = _TOOL + 1
    TOOL_MD5_GENERATEFROMFILE = _TOOL + 2
    TOOL_MD5_GENERATEINTOCLIPBOARD = _TOOL + 3
    TOOL_SHA256_GENERATE = _TOOL + 4
    TOOL_SHA256_GENERATEFROMFILE = _TOOL + 5
    TOOL_SHA256_GENERATEINTOCLIPBOARD = _TOOL + 6

    EXECUTE = _IDM + 9000

    _SYSTRAYPOPUP = _IDM + 3100
    SYSTRAYPOPUP_ACTIVATE = _SYSTRAYPOPUP + 1
    SYSTRAYPOPUP_NEWDOC = _SYSTRAYPOPUP + 2
    SYSTRAYPOPUP_NEW_AND_PASTE = _SYSTRAYPOPUP + 3
    SYSTRAYPOPUP_OPENFILE = _SYSTRAYPOPUP + 4
    SYSTRAYPOPUP_CLOSE = _SYSTRAYPOPUP + 5


class BUFFERENCODING(IntEnum, metaclass=EnhancedIntEnum):
    '''BUFFERENCODING '''
    ENC8BIT = 0
    UTF8BOM = 1
    UCS2BE = 2
    UCS2LE = 3
    UTF8 = 4
    ANSI = 5
    UCS2BE_NOBOM = 6
    UCS2LE_NOBOM = 7


class STATUSBARSECTION(IntEnum, metaclass=EnhancedIntEnum):
    '''STATUSBARSECTION '''
    DOCTYPE = 0
    DOCSIZE = 1
    CURPOS = 2
    EOFFORMAT = 3
    UNICODETYPE = 4
    TYPINGMODE = 5


class MESSAGEBOXFLAGS(IntEnum, metaclass=EnhancedIntEnum):
    '''NOTIFICATION '''
    OK = 0
    OKCANCEL = 1
    ABORTRETRYIGNORE = 2
    YESNOCANCEL = 3
    YESNO = 4
    RETRYCANCEL = 5
    CANCELTRYCONTINUE = 6
    RESULTOK = 1
    RESULTCANCEL = 2
    RESULTABORT = 3
    RESULTRETRY = 4
    RESULTIGNORE = 5
    RESULTYES = 6
    RESULTNO = 7
    RESULTTRYAGAIN = 10
    RESULTCONTINUE = 11
    ICONSTOP = 16
    ICONHAND = 16
    ICONERROR = 16
    ICONQUESTION = 32
    ICONWARNING = 48
    ICONEXCLAMATION = 48
    ICONINFORMATION = 64
    ICONASTERISK = 64
    DEFBUTTON1 = 0
    DEFBUTTON2 = 256
    DEFBUTTON3 = 512
    DEFBUTTON4 = 768

class NOTIFICATION(IntEnum, metaclass=EnhancedIntEnum):
    '''NOTIFICATION '''
    READY = 1001
    TBMODIFICATION = 1002
    FILEBEFORECLOSE = 1003
    FILEOPENED = 1004
    FILECLOSED = 1005
    FILEBEFOREOPEN = 1006
    FILEBEFORESAVE = 1007
    FILESAVED = 1008
    SHUTDOWN = 1009
    BUFFERACTIVATED = 1010
    LANGCHANGED = 1011
    WORDSTYLESUPDATED = 1012
    SHORTCUTREMAPPED = 1013
    FILEBEFORELOAD = 1014
    FILELOADFAILED = 1015
    READONLYCHANGED = 1016
    DOCORDERCHANGED = 1017
    SNAPSHOTDIRTYFILELOADED = 1018
    BEFORESHUTDOWN = 1019
    CANCELSHUTDOWN = 1020
    FILEBEFORERENAME = 1021
    FILERENAMECANCEL = 1022
    FILERENAMED = 1023
    FILEBEFOREDELETE = 1024
    FILEDELETEFAILED = 1025
    FILEDELETED = 1026

# scintilla constants

# notifications
class SCINTILLANOTIFICATION(IntEnum, metaclass=EnhancedIntEnum):
    "notifications send by scintilla"
    STYLENEEDED = 2000
    CHARADDED = 2001
    SAVEPOINTREACHED = 2002
    SAVEPOINTLEFT = 2003
    MODIFYATTEMPTRO = 2004
    KEY = 2005
    DOUBLECLICK = 2006
    UPDATEUI = 2007
    MODIFIED = 2008
    MACRORECORD = 2009
    MARGINCLICK = 2010
    NEEDSHOWN = 2011
    PAINTED = 2013
    USERLISTSELECTION = 2014
    URIDROPPED = 2015
    DWELLSTART = 2016
    DWELLEND = 2017
    ZOOM = 2018
    HOTSPOTCLICK = 2019
    HOTSPOTDOUBLECLICK = 2020
    CALLTIPCLICK = 2021
    AUTOCSELECTION = 2022
    INDICATORCLICK = 2023
    INDICATORRELEASE = 2024
    AUTOCCANCELLED = 2025
    AUTOCCHARDELETED = 2026
    HOTSPOTRELEASECLICK = 2027
    FOCUSIN = 2028
    FOCUSOUT = 2029
    AUTOCCOMPLETED = 2030
    MARGINRIGHTCLICK = 2031
    AUTOCSELECTIONCHANGE = 2032

# enumeration classes

class WHITESPACE(IntEnum, metaclass=EnhancedIntEnum):
    """ WHITESPACE values """
    INVISIBLE = 0
    VISIBLEALWAYS = 1
    VISIBLEAFTERINDENT = 2
    VISIBLEONLYININDENT = 3


class TABDRAWMODE(IntEnum, metaclass=EnhancedIntEnum):
    """ TABDRAWMODE values """
    LONGARROW = 0
    STRIKEOUT = 1


class ENDOFLINE(IntEnum, metaclass=EnhancedIntEnum):
    """ ENDOFLINE values """
    CRLF = 0
    CR = 1
    LF = 2


class IMEINTERACTION(IntEnum, metaclass=EnhancedIntEnum):
    """ IMEINTERACTION values """
    WINDOWED = 0
    INLINE = 1


class MARKERSYMBOL(IntEnum, metaclass=EnhancedIntEnum):
    """ MARKERSYMBOL values """
    CIRCLE = 0
    ROUNDRECT = 1
    ARROW = 2
    SMALLRECT = 3
    SHORTARROW = 4
    EMPTY = 5
    ARROWDOWN = 6
    MINUS = 7
    PLUS = 8
    VLINE = 9
    LCORNER = 10
    TCORNER = 11
    BOXPLUS = 12
    BOXPLUSCONNECTED = 13
    BOXMINUS = 14
    BOXMINUSCONNECTED = 15
    LCORNERCURVE = 16
    TCORNERCURVE = 17
    CIRCLEPLUS = 18
    CIRCLEPLUSCONNECTED = 19
    CIRCLEMINUS = 20
    CIRCLEMINUSCONNECTED = 21
    BACKGROUND = 22
    DOTDOTDOT = 23
    ARROWS = 24
    PIXMAP = 25
    FULLRECT = 26
    LEFTRECT = 27
    AVAILABLE = 28
    UNDERLINE = 29
    RGBAIMAGE = 30
    BOOKMARK = 31
    VERTICALBOOKMARK = 32
    CHARACTER = 10000


class MARKEROUTLINE(IntEnum, metaclass=EnhancedIntEnum):
    """ Invisible mark that only sets the line background colour. """
    FOLDEREND = 25
    FOLDEROPENMID = 26
    FOLDERMIDTAIL = 27
    FOLDERTAIL = 28
    FOLDERSUB = 29
    FOLDER = 30
    FOLDEROPEN = 31


class MARGINTYPE(IntEnum, metaclass=EnhancedIntEnum):
    """ MARGINTYPE values """
    SYMBOL = 0
    NUMBER = 1
    BACK = 2
    FORE = 3
    TEXT = 4
    COLOUR = 6


class STYLESCOMMON(IntEnum, metaclass=EnhancedIntEnum):
    """ Styles in range 32..39 are predefined for parts of the UI and are not used as normal styles. """
    DEFAULT = 32
    LINIntEnumBER = 33
    BRACELIGHT = 34
    BRACEBAD = 35
    CONTROLCHAR = 36
    INDENTGUIDE = 37
    CALLTIP = 38
    LASTPREDEFINED = 39
    FOLDDISPLAYTEXT = 39
    MAX = 255


class CHARACTERSET(IntEnum, metaclass=EnhancedIntEnum):
    """ Character set identifiers are used in StyleSetCharacterSet.
        The values are the same as the Windows *_CHARSET values. """
    ANSI = 0
    DEFAULT = 1
    SYMBOL = 2
    MAC = 77
    SHIFTJIS = 128
    HANGUL = 129
    JOHAB = 130
    GB2312 = 134
    CHINESEBIG5 = 136
    GREEK = 161
    TURKISH = 162
    VIETNAMESE = 163
    HEBREW = 177
    ARABIC = 178
    BALTIC = 186
    RUSSIAN = 204
    THAI = 222
    EASTEUROPE = 238
    OEM = 255
    OEM866 = 866
    OEM8859_15 = 1000
    CYRILLIC = 1251


class CASEVISIBLE(IntEnum, metaclass=EnhancedIntEnum):
    """ CASEVISIBLE values """
    MIXED = 0
    UPPER = 1
    LOWER = 2
    CAMEL = 3


class FONTWEIGHT(IntEnum, metaclass=EnhancedIntEnum):
    """ FONTWEIGHT values """
    NORMAL = 400
    SEMIBOLD = 600
    BOLD = 700


class INDICATORSTYLE(IntEnum, metaclass=EnhancedIntEnum):
    """ Indicator style enumeration and some constants """
    PLAIN = 0
    SQUIGGLE = 1
    TT = 2
    DIAGONAL = 3
    STRIKE = 4
    HIDDEN = 5
    BOX = 6
    ROUNDBOX = 7
    STRAIGHTBOX = 8
    CONTAINER = 8
    DASH = 9
    DOTS = 10
    SQUIGGLELOW = 11
    DOTBOX = 12
    SQUIGGLEPIXMAP = 13
    COMPOSITIONTHICK = 14
    COMPOSITIONTHIN = 15
    FULLBOX = 16
    TEXTFORE = 17
    POINT = 18
    POINTCHARACTER = 19
    GRADIENT = 20
    GRADIENTCENTRE = 21
    IME = 32
    MAX = 35
    IME_MAX = 35


class INDICATORNUMBERS(IntEnum, metaclass=EnhancedIntEnum):
    """ INDIC_CONTAINER, INDIC_IME, INDIC_IME_MAX, and INDIC_MAX are indicator numbers,
        not IndicatorStyles so should not really be in the INDIC_ enumeration.
        They are redeclared in IndicatorNumbers INDICATOR_. """
    CONTAINER = 8
    IME = 32
    IME_MAX = 35
    MAX = 35


class INDICVALUE(IntEnum, metaclass=EnhancedIntEnum):
    """ INDICVALUE values """
    BIT = 0x1000000
    MASK = 0xFFFFFF


class INDICFLAG(IntEnum, metaclass=EnhancedIntEnum):
    """ INDICFLAG values """
    VALUEFORE = 1


class INDENTVIEW(IntEnum, metaclass=EnhancedIntEnum):
    """ INDENTVIEW values """
    NONE = 0
    REAL = 1
    LOOKFORWARD = 2
    LOOKBOTH = 3


class PRINTOPTION(IntEnum, metaclass=EnhancedIntEnum):
    """ PRINTOPTION values """
    NORMAL = 0
    INVERTLIGHT = 1
    BLACKONWHITE = 2
    COLOURONWHITE = 3
    COLOURONWHITEDEFAULTBG = 4
    SCREENCOLOURS = 5


class FINDOPTION(IntEnum, metaclass=EnhancedIntEnum):
    """ FINDOPTION values """
    NONE = 0x0
    WHOLEWORD = 0x2
    MATCHCASE = 0x4
    WORDSTART = 0x00100000
    REGEXP = 0x00200000
    POSIX = 0x00400000
    CXX11REGEX = 0x00800000


class FOLDLEVEL(IntEnum, metaclass=EnhancedIntEnum):
    """ FOLDLEVEL values """
    BASE = 0x400
    NUMBERMASK = 0x0FFF
    WHITEFLAG = 0x1000
    HEADERFLAG = 0x2000


class FOLDDISPLAYTEXTSTYLE(IntEnum, metaclass=EnhancedIntEnum):
    """ FOLDDISPLAYTEXTSTYLE values """
    HIDDEN = 0
    STANDARD = 1
    BOXED = 2


class FOLDACTION(IntEnum, metaclass=EnhancedIntEnum):
    """ FOLDACTION values """
    CONTRACT = 0
    EXPAND = 1
    TOGGLE = 2


class AUTOMATICFOLD(IntEnum, metaclass=EnhancedIntEnum):
    """ AUTOMATICFOLD values """
    SHOW = 0x0001
    CLICK = 0x0002
    CHANGE = 0x0004


class FOLDFLAG(IntEnum, metaclass=EnhancedIntEnum):
    """ FOLDFLAG values """
    LINEBEFORE_EXPANDED = 0x0002
    LINEBEFORE_CONTRACTED = 0x0004
    LINEAFTER_EXPANDED = 0x0008
    LINEAFTER_CONTRACTED = 0x0010
    LEVELNUMBERS = 0x0040
    LINESTATE = 0x0080


class IDLESTYLING(IntEnum, metaclass=EnhancedIntEnum):
    """ IDLESTYLING values """
    NONE = 0
    TOVISIBLE = 1
    AFTERVISIBLE = 2
    ALL = 3


class WRAP(IntEnum, metaclass=EnhancedIntEnum):
    """ WRAP values """
    NONE = 0
    WORD = 1
    CHAR = 2
    WHITESPACE = 3


class WRAPVISUALFLAG(IntEnum, metaclass=EnhancedIntEnum):
    """ WRAPVISUALFLAG values """
    NONE = 0x0000
    END = 0x0001
    START = 0x0002
    MARGIN = 0x0004


class WRAPVISUALLOCATION(IntEnum, metaclass=EnhancedIntEnum):
    """ WRAPVISUALLOCATION values """
    DEFAULT = 0x0000
    END_BY_TEXT = 0x0001
    START_BY_TEXT = 0x0002


class WRAPINDENTMODE(IntEnum, metaclass=EnhancedIntEnum):
    """ WRAPINDENTMODE values """
    FIXED = 0
    SAME = 1
    INDENT = 2
    DEEPINDENT = 3


class LINECACHE(IntEnum, metaclass=EnhancedIntEnum):
    """ LINECACHE values """
    NONE = 0
    CARET = 1
    PAGE = 2
    DOCUMENT = 3


class PHASESDRAW(IntEnum, metaclass=EnhancedIntEnum):
    """ PHASESDRAW values """
    ONE = 0
    TWO = 1
    MULTIPLE = 2


class FONTQUALITY(IntEnum, metaclass=EnhancedIntEnum):
    """ Control font anti-aliasing. """
    QUALITY_DEFAULT = 0
    QUALITY_NON_ANTIALIASED = 1
    QUALITY_ANTIALIASED = 2
    QUALITY_LCD_OPTIMIZED = 3
    QUALITY_MASK = 0xF


class MULTIPASTE(IntEnum, metaclass=EnhancedIntEnum):
    """ MULTIPASTE values """
    ONCE = 0
    EACH = 1


class ACCESSIBILITY(IntEnum, metaclass=EnhancedIntEnum):
    """ ACCESSIBILITY values """
    DISABLED = 0
    ENABLED = 1


class EDGEVISUALSTYLE(IntEnum, metaclass=EnhancedIntEnum):
    """ EDGEVISUALSTYLE values """
    NONE = 0
    LINE = 1
    BACKGROUND = 2
    MULTILINE = 3


class POPUP(IntEnum, metaclass=EnhancedIntEnum):
    """ POPUP values """
    NEVER = 0
    ALL = 1
    TEXT = 2


class DOCUMENTOPTION(IntEnum, metaclass=EnhancedIntEnum):
    """ DOCUMENTOPTION values """
    DEFAULT = 0
    STYLES_NONE = 0x1
    TEXT_LARGE = 0x100


class STATUS(IntEnum, metaclass=EnhancedIntEnum):
    """ STATUS values """
    OK = 0
    FAILURE = 1
    BADALLOC=2
    WARN_START = 1000
    REGEX=1001


class CURSORSHAPE(IntEnum, metaclass=EnhancedIntEnum):
    """ CURSORSHAPE values """
    NORMAL = -1
    ARROW = 2
    WAIT = 4
    REVERSEARROW = 7


class VISIBLEPOLICY(IntEnum, metaclass=EnhancedIntEnum):
    """ Constants for use with SetVisiblePolicy, similar to SetCaretPolicy. """
    SLOP = 0x01
    STRICT = 0x04


class CARETPOLICY(IntEnum, metaclass=EnhancedIntEnum):
    """ CARETPOLICY values """
    SLOP = 0x01
    STRICT = 0x04
    JUMPS = 0x10
    EVEN = 0x08


class SELECTIONMODE(IntEnum, metaclass=EnhancedIntEnum):
    """ SELECTIONMODE values """
    STREAM = 0
    RECTANGLE = 1
    LINES = 2
    THIN = 3


class CASEINSENSITIVEBEHAVIOUR(IntEnum, metaclass=EnhancedIntEnum):
    """ CASEINSENSITIVEBEHAVIOUR values """
    RESPECTCASE = 0
    IGNORECASE = 1


class MULTIAUTOCOMPLETE(IntEnum, metaclass=EnhancedIntEnum):
    """ MULTIAUTOCOMPLETE values """
    ONCE = 0
    EACH = 1


class ORDERING(IntEnum, metaclass=EnhancedIntEnum):
    """ ORDERING values """
    PRESORTED = 0
    PERFORMSORT = 1
    CUSTOM = 2


class CARETSTICKY(IntEnum, metaclass=EnhancedIntEnum):
    """ CARETSTICKY values """
    OFF = 0
    ON = 1
    WHITESPACE = 2


class ALPHA(IntEnum, metaclass=EnhancedIntEnum):
    """ ALPHA values """
    TRANSPARENT = 0
    TRANSPARENT1 = 1
    TRANSPARENT2 = 2
    TRANSPARENT3 = 3
    TRANSPARENT4 = 4
    TRANSPARENT5 = 5
    TRANSPARENT6 = 6
    TRANSPARENT7 = 7
    TRANSPARENT8 = 8
    TRANSPARENT9 = 9
    TRANSPARENT10 = 10
    TRANSPARENT11 = 11
    TRANSPARENT12 = 12
    TRANSPARENT13 = 13
    TRANSPARENT14 = 14
    TRANSPARENT15 = 15
    TRANSPARENT16 = 16
    TRANSPARENT17 = 17
    TRANSPARENT18 = 18
    TRANSPARENT19 = 19
    TRANSPARENT20 = 20
    TRANSPARENT21 = 21
    TRANSPARENT22 = 22
    TRANSPARENT23 = 23
    TRANSPARENT24 = 24
    TRANSPARENT25 = 25
    TRANSPARENT26 = 26
    TRANSPARENT27 = 27
    TRANSPARENT28 = 28
    TRANSPARENT29 = 29
    TRANSPARENT30 = 30
    TRANSPARENT31 = 31
    TRANSPARENT32 = 32
    TRANSPARENT33 = 33
    TRANSPARENT34 = 34
    TRANSPARENT35 = 35
    TRANSPARENT36 = 36
    TRANSPARENT37 = 37
    TRANSPARENT38 = 38
    TRANSPARENT39 = 39
    TRANSPARENT40 = 40
    TRANSPARENT41 = 41
    TRANSPARENT42 = 42
    TRANSPARENT43 = 43
    TRANSPARENT44 = 44
    TRANSPARENT45 = 45
    TRANSPARENT46 = 46
    TRANSPARENT47 = 47
    TRANSPARENT48 = 48
    TRANSPARENT49 = 49
    TRANSPARENT50 = 50
    TRANSPARENT51 = 51
    TRANSPARENT52 = 52
    TRANSPARENT53 = 53
    TRANSPARENT54 = 54
    TRANSPARENT55 = 55
    TRANSPARENT56 = 56
    TRANSPARENT57 = 57
    TRANSPARENT58 = 58
    TRANSPARENT59 = 59
    TRANSPARENT60 = 60
    TRANSPARENT61 = 61
    TRANSPARENT62 = 62
    TRANSPARENT63 = 63
    TRANSPARENT64 = 64
    TRANSPARENT65 = 65
    TRANSPARENT66 = 66
    TRANSPARENT67 = 67
    TRANSPARENT68 = 68
    TRANSPARENT69 = 69
    TRANSPARENT70 = 70
    TRANSPARENT71 = 71
    TRANSPARENT72 = 72
    TRANSPARENT73 = 73
    TRANSPARENT74 = 74
    TRANSPARENT75 = 75
    TRANSPARENT76 = 76
    TRANSPARENT77 = 77
    TRANSPARENT78 = 78
    TRANSPARENT79 = 79
    TRANSPARENT80 = 80
    TRANSPARENT81 = 81
    TRANSPARENT82 = 82
    TRANSPARENT83 = 83
    TRANSPARENT84 = 84
    TRANSPARENT85 = 85
    TRANSPARENT86 = 86
    TRANSPARENT87 = 87
    TRANSPARENT88 = 88
    TRANSPARENT89 = 89
    TRANSPARENT90 = 90
    TRANSPARENT91 = 91
    TRANSPARENT92 = 92
    TRANSPARENT93 = 93
    TRANSPARENT94 = 94
    TRANSPARENT95 = 95
    TRANSPARENT96 = 96
    TRANSPARENT97 = 97
    TRANSPARENT98 = 98
    TRANSPARENT99 = 99
    TRANSPARENT100 = 100
    TRANSPARENT101 = 101
    TRANSPARENT102 = 102
    TRANSPARENT103 = 103
    TRANSPARENT104 = 104
    TRANSPARENT105 = 105
    TRANSPARENT106 = 106
    TRANSPARENT107 = 107
    TRANSPARENT108 = 108
    TRANSPARENT109 = 109
    TRANSPARENT110 = 110
    TRANSPARENT111 = 111
    TRANSPARENT112 = 112
    TRANSPARENT113 = 113
    TRANSPARENT114 = 114
    TRANSPARENT115 = 115
    TRANSPARENT116 = 116
    TRANSPARENT117 = 117
    TRANSPARENT118 = 118
    TRANSPARENT119 = 119
    TRANSPARENT120 = 120
    TRANSPARENT121 = 121
    TRANSPARENT122 = 122
    TRANSPARENT123 = 123
    TRANSPARENT124 = 124
    TRANSPARENT125 = 125
    TRANSPARENT126 = 126
    TRANSPARENT127 = 127
    TRANSPARENT128 = 128
    TRANSPARENT129 = 129
    TRANSPARENT130 = 130
    TRANSPARENT131 = 131
    TRANSPARENT132 = 132
    TRANSPARENT133 = 133
    TRANSPARENT134 = 134
    TRANSPARENT135 = 135
    TRANSPARENT136 = 136
    TRANSPARENT137 = 137
    TRANSPARENT138 = 138
    TRANSPARENT139 = 139
    TRANSPARENT140 = 140
    TRANSPARENT141 = 141
    TRANSPARENT142 = 142
    TRANSPARENT143 = 143
    TRANSPARENT144 = 144
    TRANSPARENT145 = 145
    TRANSPARENT146 = 146
    TRANSPARENT147 = 147
    TRANSPARENT148 = 148
    TRANSPARENT149 = 149
    TRANSPARENT150 = 150
    TRANSPARENT151 = 151
    TRANSPARENT152 = 152
    TRANSPARENT153 = 153
    TRANSPARENT154 = 154
    TRANSPARENT155 = 155
    TRANSPARENT156 = 156
    TRANSPARENT157 = 157
    TRANSPARENT158 = 158
    TRANSPARENT159 = 159
    TRANSPARENT160 = 160
    TRANSPARENT161 = 161
    TRANSPARENT162 = 162
    TRANSPARENT163 = 163
    TRANSPARENT164 = 164
    TRANSPARENT165 = 165
    TRANSPARENT166 = 166
    TRANSPARENT167 = 167
    TRANSPARENT168 = 168
    TRANSPARENT169 = 169
    TRANSPARENT170 = 170
    TRANSPARENT171 = 171
    TRANSPARENT172 = 172
    TRANSPARENT173 = 173
    TRANSPARENT174 = 174
    TRANSPARENT175 = 175
    TRANSPARENT176 = 176
    TRANSPARENT177 = 177
    TRANSPARENT178 = 178
    TRANSPARENT179 = 179
    TRANSPARENT180 = 180
    TRANSPARENT181 = 181
    TRANSPARENT182 = 182
    TRANSPARENT183 = 183
    TRANSPARENT184 = 184
    TRANSPARENT185 = 185
    TRANSPARENT186 = 186
    TRANSPARENT187 = 187
    TRANSPARENT188 = 188
    TRANSPARENT189 = 189
    TRANSPARENT190 = 190
    TRANSPARENT191 = 191
    TRANSPARENT192 = 192
    TRANSPARENT193 = 193
    TRANSPARENT194 = 194
    TRANSPARENT195 = 195
    TRANSPARENT196 = 196
    TRANSPARENT197 = 197
    TRANSPARENT198 = 198
    TRANSPARENT199 = 199
    TRANSPARENT200 = 200
    TRANSPARENT201 = 201
    TRANSPARENT202 = 202
    TRANSPARENT203 = 203
    TRANSPARENT204 = 204
    TRANSPARENT205 = 205
    TRANSPARENT206 = 206
    TRANSPARENT207 = 207
    TRANSPARENT208 = 208
    TRANSPARENT209 = 209
    TRANSPARENT210 = 210
    TRANSPARENT211 = 211
    TRANSPARENT212 = 212
    TRANSPARENT213 = 213
    TRANSPARENT214 = 214
    TRANSPARENT215 = 215
    TRANSPARENT216 = 216
    TRANSPARENT217 = 217
    TRANSPARENT218 = 218
    TRANSPARENT219 = 219
    TRANSPARENT220 = 220
    TRANSPARENT221 = 221
    TRANSPARENT222 = 222
    TRANSPARENT223 = 223
    TRANSPARENT224 = 224
    TRANSPARENT225 = 225
    TRANSPARENT226 = 226
    TRANSPARENT227 = 227
    TRANSPARENT228 = 228
    TRANSPARENT229 = 229
    TRANSPARENT230 = 230
    TRANSPARENT231 = 231
    TRANSPARENT232 = 232
    TRANSPARENT233 = 233
    TRANSPARENT234 = 234
    TRANSPARENT235 = 235
    TRANSPARENT236 = 236
    TRANSPARENT237 = 237
    TRANSPARENT238 = 238
    TRANSPARENT239 = 239
    TRANSPARENT240 = 240
    TRANSPARENT241 = 241
    TRANSPARENT242 = 242
    TRANSPARENT243 = 243
    TRANSPARENT244 = 244
    TRANSPARENT245 = 245
    TRANSPARENT246 = 246
    TRANSPARENT247 = 247
    TRANSPARENT248 = 248
    TRANSPARENT249 = 249
    TRANSPARENT250 = 250
    TRANSPARENT251 = 251
    TRANSPARENT252 = 252
    TRANSPARENT253 = 253
    TRANSPARENT254 = 254
    OPAQUE = 255
    NOALPHA = 256


class CARETSTYLE(IntEnum, metaclass=EnhancedIntEnum):
    """ CARETSTYLE values """
    OVERSTRIKE_BAR = 0
    INVISIBLE = 0
    LINE = 1
    BLOCK = 2
    INS_MASK = 0xF
    OVERSTRIKE_BLOCK = 0x10
    BLOCK_AFTER = 0x100


class MARGINOPTION(IntEnum, metaclass=EnhancedIntEnum):
    """ MARGINOPTION values """
    NONE = 0
    SUBLINESELECT = 1


class ANNOTATIONVISIBLE(IntEnum, metaclass=EnhancedIntEnum):
    """ ANNOTATIONVISIBLE values """
    HIDDEN = 0
    STANDARD = 1
    BOXED = 2
    INDENTED = 3


class UNDOFLAGS(IntEnum, metaclass=EnhancedIntEnum):
    """ UNDOFLAGS values """
    NONE = 0
    MAY_COALESCE = 1


class VIRTUALSPACE(IntEnum, metaclass=EnhancedIntEnum):
    """ VIRTUALSPACE values """
    NONE = 0
    RECTANGULARSELECTION = 1
    USERACCESSIBLE = 2
    NOWRAPLINESTART = 4


class TECHNOLOGY(IntEnum, metaclass=EnhancedIntEnum):
    """ TECHNOLOGY values """
    DEFAULT = 0
    DIRECTWRITE = 1
    DIRECTWRITERETAIN = 2
    DIRECTWRITEDC = 3


class LINEENDTYPE(IntEnum, metaclass=EnhancedIntEnum):
    """ Line end types which may be used in addition to LF, CR, and CRLF
        SC_LINE_END_TYPE_UNICODE includes U+2028 Line Separator,
        U+2029 Paragraph Separator, and U+0085 Next Line """
    DEFAULT = 0
    UNICODE = 1


class TYPEPROPERTY(IntEnum, metaclass=EnhancedIntEnum):
    """ TYPEPROPERTY values """
    BOOLEAN = 0
    INTEGER = 1
    STRING = 2


class MODIFICATIONFLAGS(IntEnum, metaclass=EnhancedIntEnum):
    """ Notifications
        Type of modification and the action which caused the modification.
        These are defined as a bit mask to make it easy to specify which notifications are wanted.
        One bit is set from each of SC_MOD_* and SC_PERFORMED_*. """
    NONE = 0x0
    INSERTTEXT = 0x1
    DELETETEXT = 0x2
    CHANGESTYLE = 0x4
    CHANGEFOLD = 0x8
    USER = 0x10
    UNDO = 0x20
    REDO = 0x40
    MULTISTEPUNDOREDO = 0x80
    LASTSTEPINUNDOREDO = 0x100
    CHANGEMARKER = 0x200
    BEFOREINSERT = 0x400
    BEFOREDELETE = 0x800
    MULTILINEUNDOREDO = 0x1000
    STARTACTION = 0x2000
    CHANGEINDICATOR = 0x4000
    CHANGELINESTATE = 0x8000
    CHANGEMARGIN = 0x10000
    CHANGEANNOTATION = 0x20000
    CONTAINER = 0x40000
    LEXERSTATE = 0x80000
    INSERTCHECK = 0x100000
    CHANGETABSTOPS = 0x200000
    MODEVENTMASKALL = 0x3FFFFF


class UPDATE(IntEnum, metaclass=EnhancedIntEnum):
    """ UPDATE values """
    CONTENT = 0x1
    SELECTION = 0x2
    V_SCROLL = 0x4
    H_SCROLL = 0x8


class KEYS(IntEnum, metaclass=EnhancedIntEnum):
    """ Symbolic key codes and modifier flags.
        ASCII and other printable characters below 256.
        Extended keys above 300. """
    ESCAPE = 7
    BACK = 8
    TAB = 9
    RETURN = 13
    DOWN = 300
    UP = 301
    LEFT = 302
    RIGHT = 303
    HOME = 304
    END = 305
    PRIOR = 306
    NEXT = 307
    DELETE = 308
    INSERT = 309
    ADD = 310
    SUBTRACT = 311
    DIVIDE = 312
    WIN = 313
    RWIN = 314
    MENU = 315


class KEYMOD(IntEnum, metaclass=EnhancedIntEnum):
    """ KEYMOD values """
    NORM = 0
    SHIFT = 1
    CTRL = 2
    ALT = 4
    SUPER = 8
    META = 16


class COMPLETIONMETHODS(IntEnum, metaclass=EnhancedIntEnum):
    """ COMPLETIONMETHODS values """
    FILLUP = 1
    DOUBLECLICK = 2
    TAB = 3
    NEWLINE = 4
    COMMAND = 5


class CHARACTERSOURCE(IntEnum, metaclass=EnhancedIntEnum):
    """ characterSource for SCN_CHARADDED """
    DIRECT_INPUT = 0
    TENTATIVE_INPUT = 1
    IME_RESULT = 2


class LEXER(IntEnum, metaclass=EnhancedIntEnum):
    """ For SciLexer.h """
    CONTAINER = 0
    NULL = 1
    PYTHON = 2
    CPP = 3
    HTML = 4
    XML = 5
    PERL = 6
    SQL = 7
    VB = 8
    PROPERTIES = 9
    ERRORLIST = 10
    MAKEFILE = 11
    BATCH = 12
    XCODE = 13
    LATEX = 14
    LUA = 15
    DIFF = 16
    CONF = 17
    PASCAL = 18
    AVE = 19
    ADA = 20
    LISP = 21
    RUBY = 22
    EIFFEL = 23
    EIFFELKW = 24
    TCL = 25
    NNCRONTAB = 26
    BULLANT = 27
    VBSCRIPT = 28
    BAAN = 31
    MATLAB = 32
    SCRIPTOL = 33
    ASM = 34
    CPPNOCASE = 35
    FORTRAN = 36
    F77 = 37
    CSS = 38
    POV = 39
    LOUT = 40
    ESCRIPT = 41
    PS = 42
    NSIS = 43
    MMIXAL = 44
    CLW = 45
    CLWNOCASE = 46
    LOT = 47
    YAML = 48
    TEX = 49
    METAPOST = 50
    POWERBASIC = 51
    FORTH = 52
    ERLANG = 53
    OCTAVE = 54
    MSSQL = 55
    VERILOG = 56
    KIX = 57
    GUI4CLI = 58
    SPECMAN = 59
    AU3 = 60
    APDL = 61
    BASH = 62
    ASN1 = 63
    VHDL = 64
    CAML = 65
    BLITZBASIC = 66
    PUREBASIC = 67
    HASKELL = 68
    PHPSCRIPT = 69
    TADS3 = 70
    REBOL = 71
    SMALLTALK = 72
    FLAGSHIP = 73
    CSOUND = 74
    FREEBASIC = 75
    INNOSETUP = 76
    OPAL = 77
    SPICE = 78
    D = 79
    CMAKE = 80
    GAP = 81
    PLM = 82
    PROGRESS = 83
    ABAQUS = 84
    ASYMPTOTE = 85
    R = 86
    MAGIK = 87
    POWERSHELL = 88
    MYSQL = 89
    PO = 90
    TAL = 91
    COBOL = 92
    TACL = 93
    SORCUS = 94
    POWERPRO = 95
    NIMROD = 96
    SML = 97
    MARKDOWN = 98
    TXT2TAGS = 99
    A68K = 100
    MODULA = 101
    COFFEESCRIPT = 102
    TCMD = 103
    AVS = 104
    ECL = 105
    OSCRIPT = 106
    VISUALPROLOG = 107
    LITERATEHASKELL = 108
    STTXT = 109
    KVIRC = 110
    RUST = 111
    DMAP = 112
    AS = 113
    DMIS = 114
    REGISTRY = 115
    BIBTEX = 116
    SREC = 117
    IHEX = 118
    TEHEX = 119
    JSON = 120
    EDIFACT = 121
    INDENT = 122
    MAXIMA = 123
    STATA = 124
    SAS = 125
    NIM = 126
    CIL = 127
    X12 = 128
    DATAFLEX = 129
    AUTOMATIC = 1000


class BIDIRECTIONAL(IntEnum, metaclass=EnhancedIntEnum):
    """ GTK Specific to work around focus and accelerator problems: """
    DISABLED = 0
    L2R = 1
    R2L = 2


class LINECHARACTERINDEXTYPE(IntEnum, metaclass=EnhancedIntEnum):
    """ LINECHARACTERINDEXTYPE values """
    NONE = 0
    UTF32 = 1
    UTF16 = 2


editor2 = editor1 = editor